{"version":3,"file":"code-playground.js","sources":["../src/code-playground.ts"],"sourcesContent":["/* tomorrow-night */\nconst base00 = '#35434e'; // was #1d1f21;\nconst base01 = '#282a2e';\nconst base02 = '#373b41';\nconst base03 = '#969896';\nconst base04 = '#b4b7b4';\nconst base05 = '#c5c8c6'; // base05\nconst base06 = '#e0e0e0';\nconst base07 = '#ffffff';\nconst base0c = '#cc6666'; // base08\nconst base09 = '#ec9c65';\nconst base0a = '#f0c674';\nconst base0b = '#b5bd68';\nconst base08 = '#8abeb7'; // base0c\nconst base0d = '#81a2be'; // base0d\nconst base0e = '#b294bb';\nconst base0f = '#a3685a';\n\nconst RED = base0c;\nconst YELLOW = base0a;\n// const BLUE = base0d;\n// const GREEN = base0b;\n\nconst DEFAULT_AUTORUN_DELAY = 1000;\n\nconst TEMPLATE = document.createElement('template');\nTEMPLATE.innerHTML = `\n<link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/codemirror/5.65.16/codemirror.min.css\">\n<style>\n\n:host {\n    display: block;\n    font-family: var(--ui-font-family, -apple-system, BlinkMacSystemFont, \"Segoe UI\",\n      Roboto, Oxygen-Sans, Ubuntu, Cantarell,\n      \"Helvetica Neue\", \"Source Sans Pro\"), sans-serif;\n    line-height: 1.5;\n    margin-top: 8px;\n    --_base-00: var(--base-00, ${base00});\n    --_base-01: var(--base-01, ${base01});\n    --_base-02: var(--base-02, ${base02});\n    --_base-03: var(--base-03, ${base03});\n    --_base-04: var(--base-04, ${base04});\n    --_base-05: var(--base-05, ${base05});\n    --_base-06: var(--base-06, ${base06});\n    --_base-07: var(--base-07, ${base07});\n    --_base-08: var(--base-08, ${base08});\n    --_base-09: var(--base-09, ${base09});\n    --_base-0a: var(--base-0a, ${base0a});\n    --_base-0b: var(--base-0b, ${base0b});\n    --_base-0c: var(--base-0c, ${base0c});\n    --_base-0d: var(--base-0d, ${base0d});\n    --_base-0e: var(--base-0e, ${base0e});\n    --_base-0f: var(--base-0f, ${base0f});\n    --_semantic-red: var(--semantic-red, ${RED});\n    --_semantic-orange: var(--semantic-orange, ${YELLOW});\n\n  }\n  :host([hidden]) {\n    display: none;\n  }\n\n  slot { display: none; }\n\n  .original-content {\n    display: none;\n  }\n\n  .editors.hidden {\n    display: none;\n  }\n\n  .__code-playground-container {\n    display: flex;\n    flex-flow: column;\n    justify-content: space-between;\n    height: 100%;\n    min-width: 300px;\n    border-radius: 8px;\n    width: 100%;\n    margin: 0;\n    background: transparent\n  }\n\n  .__code-playground-editor {\n    border: 1px solid #ccc;\n    background: var(--base-00);\n    color: var(--base-05);\n  }\n\n  .__code-playground-container textarea {\n    display: block;\n\n    color: var(--text-color);\n    background: var(--ui-background);\n\n    min-height: 4em;\n    height: 100%;\n    width: 100%;\n\n    resize: vertical;\n\n    border: var(--ui-border, 1px solid rgba(0,0,0,.25));\n    outline: none;\n    font-family: var(--monospace-font-family), 'Berkeley Mono', 'JetBrains Mono', 'IBM Plex Mono', 'Fira Code', monospace;\n    font-size: 16px;\n    line-height: 1.2;\n  }\n\n\n  .__code-playground-container label {\n    display: block;\n    font-weight: 700;\n    padding-top: 4px;\n    padding-bottom: 4px;\n}\n\n\n  :host div.__code-playground-button-bar:not(.visible) {\n    display: none !important;\n  }\n\n  button svg {\n    height: 1em;\n    width: 1em;\n    margin-right: .55em;\n    vertical-align: -.12em;\n  }\n  \n\n  #run-button:not(.visible) {\n    display: none !important;\n  }\n\n  .__code-playground-result {\n    width: 100%;\n    margin: .5em 0 0 0;\n  }\n\n\n  .__code-playground-output {\n    display:  flex;\n    flex-flow: column;\n  }\n\n  .__code-playground-output:not(.visible) {\n    display: none !important;\n  }\n\n  .__code-playground-output textarea {\n    width: calc(100% - 16px);\n  }\n\n\n  .__code-playground-console {\n    display: block;\n    max-height: 50vh;\n    margin: .5em 0 0 0;\n    overflow: auto;\n\n    padding: 8px 8px 8px 1em;\n    border-radius: 8px;\n\n    color: var(--_base-05);\n    background: var(--_base-00);\n    border: var(--ui-border, 1px solid rgba(0, 0, 0, .2));\n\n    font-family: var(--monospace-font-family), 'Berkeley Mono', 'JetBrains Mono', 'IBM Plex Mono', 'Fira Code', monospace;\n    font-size: 1em;\n\n    white-space: pre-wrap;\n  }\n\n  .__code-playground-console:not(.visible) {\n    display: none !important;\n  }\n\n\n  .__code-playground-console::selection, \n  .__code-playground-console *::selection {\n    background: var(--selection-background, var(--_base-01));\n    color: var(--selection-color, inherit);\n  }\n\n\n  .__code-playground-console .sep {\n    color: var(--_base-05);\n  }\n  .__code-playground-console .index {\n    color: var(--_base-05);\n    opacity: .3;\n    float: left;\n    width: 0;\n    font-style: italic;\n  }\n  .__code-playground-console .boolean {\n    color: var(--_base-0e);\n    font-weight: bold;\n  }\n  .__code-playground-console .empty {\n    color: var(--_base-0e);\n    font-style: italic;\n  }\n  .__code-playground-console .null {\n    color: var(--_base-0e);\n    font-style: italic;\n  }\n  .__code-playground-console .string {\n    color: var(--_base-0a);\n    font-weight: bold;\n  }\n  .__code-playground-console .function {\n    color: var(--_base-0b);\n  }\n  .__code-playground-console .number {\n    color: var(--_base-0e);\n  }\n  .__code-playground-console .property {\n    color: var(--_base-0b);\n  }\n  .__code-playground-console .object {\n    color: var(--_base-0b);\n  }\n  .__code-playground-console .error {\n    display: block;\n    width: calc(100% + 16px);\n    padding-right: 4px;\n    padding-top: 8px;\n    padding-bottom:8px;\n    padding-left: 6px;\n    margin: -8px -20px;\n    background: var(--red-800);\n    color: white;\n    border-left: 8px solid var(--_semantic-red);\n  }\n  .__code-playground-console .warning {\n    color: var(--_semantic-orange);\n  }\n  .__code-playground-console .log {\n    color: var(--blue--200);\n  }\n  .__code-playground-console .group {\n    font-weight: bold;\n  }\n  \n\n\n\n@media (prefers-color-scheme: dark) {\n  :root {\n    --selection-background: var(--primary-color);\n    --selection-color: #fff;\n  }\n}\n  \n\n/* Tomorrow Comment */\n.hljs-comment {\n    color: var(--_base-04);\n}\n\n/* Function (JS) and tag (HTML) names */\n.hljs-tag, .hljs-title {\n    color: var(--_base-0a);\n}\n  \n/* Tomorrow Red */\n.hljs-variable,\n.hljs-attribute,\n.hljs-tag,\n.hljs-regexp,\n.ruby .hljs-constant,\n.xml .hljs-tag .hljs-title,\n.xml .hljs-pi,\n.xml .hljs-doctype,\n.html .hljs-doctype,\n.css .hljs-id,\n.css .hljs-class,\n.css .hljs-pseudo {\n  color: var(--_base-0c);\n}\n\n/* Tomorrow Orange */\n.hljs-number,\n.hljs-preprocessor,\n.hljs-built_in,\n.hljs-literal,\n.hljs-params,\n.hljs-constant {\n  color: var(--_base-09);\n  font-weight: normal;\n}\n\n/* Tomorrow Yellow */\n.ruby .hljs-class .hljs-title,\n.css .hljs-rules .hljs-attribute {\n    color: var(--_base-0a);\n}\n\n/* Tomorrow Green */\n.hljs-string,\n.hljs-value,\n.hljs-inheritance,\n.hljs-header,\n.ruby .hljs-symbol,\n.xml .hljs-cdata {\n  color: var(--_base-0b);\n}\n\n/* Tomorrow Aqua */\n.css .hljs-hexcolor {\n  color: var(--_base-08);\n}\n\n/* Tomorrow Blue */\n.hljs-function,\n.python .hljs-decorator,\n.python .hljs-title,\n.ruby .hljs-function .hljs-title,\n.ruby .hljs-title .hljs-keyword,\n.perl .hljs-sub,\n.javascript .hljs-title,\n.coffeescript .hljs-title {\n  color: var(--_base-0d);\n  font-weight: bold;\n}\n\n/* Tomorrow Purple */\n.hljs-keyword,\n.javascript .hljs-function {\n  color: var(--_base-0e);\n  font-weight: bold;\n}\n\n.hljs {\n  display: block;\n  background: var(--_base-00);\n  color: var(--_base-05);\n  padding: 0.5em;\n}\n\n.coffeescript .javascript,\n.javascript .xml,\n.tex .hljs-formula,\n.xml .javascript,\n.xml .vbscript,\n.xml .css,\n.xml .hljs-cdata {\n    opacity: 0.5;\n}\n\n// Rouge typographic adjustments.\n// See https://github.com/rouge-ruby/rouge/wiki/List-of-tokens\n\n.highlight .c1,     // Single line comment\n.highlight .cm      // Multiline comment\n  {\n    font-style: italic;\n}\n\n.highlight .k,       // keywords\n.highlight .kc,       // keywords constant\n.highlight .kd,       // keywords declaration\n.highlight .kn,       // keywords namespace\n.highlight .kp,       // keywords pseudi\n.highlight .kr,       // keywords reserved\n.highlight .kt,       // keywords type\n.highlight .kv       // keywords variable\n{\n  font-weight: bold;\n}\n\n.CodeMirror {\n  font-family: var(--monospace-font-family), 'Berkeley Mono', 'JetBrains Mono', 'IBM Plex Mono', 'Fira Code', monospace;\n  color: inherit;\n}\n.cm-s-tomorrow-night.CodeMirror { background: transparent; }\n.cm-s-tomorrow-night div.CodeMirror-selected { background: var(--selection-background, var(--_base-01)); color: var(--selection-color, inherit);}\n\n.cm-s-tomorrow-night .CodeMirror-line::selection, .cm-s-tomorrow-night .CodeMirror-line > span::selection, .cm-s-tomorrow-night .CodeMirror-line > span > span::selection { background: var(--selection-background, rgba(45, 45, 45, 0.99)); color: var(--selection-color, inherit);}\n\n.cm-s-tomorrow-night .CodeMirror-line::-moz-selection, .cm-s-tomorrow-night .CodeMirror-line > span::-moz-selection, .cm-s-tomorrow-night .CodeMirror-line > span > span::-moz-selection { background: var(--selection-background, rgba(45, 45, 45, 0.99)); color: var(--selection-color, inherit);}\n\n.cm-s-tomorrow-night .CodeMirror-gutters { background: transparent; border-right: 0px; }\n.cm-s-tomorrow-night .CodeMirror-guttermarker { color: var(--_base-0c); }\n.cm-s-tomorrow-night .CodeMirror-guttermarker-subtle { color: var(--_base-03); }\n.cm-s-tomorrow-night .CodeMirror-linenumber { color: var(--_base-04); opacity: .7; }\n.cm-s-tomorrow-night .CodeMirror-cursor { border-left: 1px solid var(--_base-0d); }\n\n.cm-s-tomorrow-night span.cm-comment { color: var(--_base-04); }\n.cm-s-tomorrow-night span.cm-atom { color: var(--_base-0e); }\n.cm-s-tomorrow-night span.cm-number { color: var(--_base-0e); }\n\n.cm-s-tomorrow-night span.cm-property, .cm-s-tomorrow-night span.cm-attribute { color: var(--_base-0a); }\n.cm-s-tomorrow-night span.cm-keyword { color: var(--_base-0c); }\n.cm-s-tomorrow-night span.cm-string { color: var(--_base-0b); }\n\n.cm-s-tomorrow-night span.cm-variable { color: var(--_base-0b); }\n.cm-s-tomorrow-night span.cm-variable-2 { color: var(--_base-0d); }\n.cm-s-tomorrow-night span.cm-def { color: var(--_base-09); }\n.cm-s-tomorrow-night span.cm-bracket { color: var(--_base-05); }\n.cm-s-tomorrow-night span.cm-tag { color: var(--_base-0a); }\n.cm-s-tomorrow-night span.cm-link { color: var(--_base-0e); }\n.cm-s-tomorrow-night span.cm-error { background: var(--_base-0c); color: var(--_base-03); }\n\n.cm-s-tomorrow-night .CodeMirror-activeline-background { background: var(--_base-02); }\n.cm-s-tomorrow-night .CodeMirror-matchingbracket { text-decoration: underline; color: white !important; }    \n\n\n.CodeMirror .marked div.CodeMirror-linenumber {\n  opacity: 1;\n  color: var(--base-07, #fff);\n}\n\n.CodeMirror .marked pre.CodeMirror-line::before {\n  content: \"\";\n  position: absolute;\n  top: 0; \n  left: 0;\n  width: 100%; \n  height: 100%;  \n  opacity: .5; \n  z-index: -1;\n  background: var(--editor-marked-line, var(--cyan-700, #0c6abe)) !important;\n}\n</style>\n<slot name=\"style\"></slot>\n`;\n\nconst CONSOLE_MAX_LINES = 1000;\n\nexport class CodePlaygroundElement extends HTMLElement {\n  private dirty = false;\n  private containerId: string;\n  private moduleMap: { [module: string]: string };\n  private resizeObserver: ResizeObserver;\n  private runTimer: number;\n\n  private consoleUpdateTimer: number;\n  private consoleContent: string; // Pending content not yet displayed in the console.\n\n  // True if the user has made some changes to one of the editor\n  private edited = false;\n  private resetting = false;\n\n  timers: { [key: string]: number } = {};\n\n  /** The name of the attributes use the dash convention, as per HTML5 spec:\n   *\n   * > Any namespace-less attribute that is relevant to the element's\n   * > functioning, as determined by the element's author, may be specified on\n   * > an autonomous custom element, so long as the attribute name is\n   * > XML-compatible and contains no ASCII upper alphas.\n   *\n   * However, React properties expect camelCase names, so we also\n   * support those (read-only).\n   *\n   */\n  static attributes = {\n    showLineNumbers: 'show-line-numbers',\n    buttonBarVisibility: 'button-bar-visibility',\n    autorun: 'autorun',\n    markLine: 'mark-line',\n    markJavascriptLine: 'mark-javascript-line',\n    markHtmlLine: 'mark-html-line',\n  };\n\n  static get observedAttributes(): string[] {\n    return Object.values(CodePlaygroundElement.attributes);\n  }\n\n  attributeChangedCallback(\n    name: string,\n    oldValue: string,\n    newValue: string\n  ): void {\n    if (oldValue === newValue) return;\n    const attributes = CodePlaygroundElement.attributes;\n    if (\n      name === attributes.markLine ||\n      name === attributes.markJavascriptLine\n    ) {\n      mark(this.shadowRoot, 'javascript', newValue);\n    } else if (name === attributes.markHtmlLine) {\n      mark(this.shadowRoot, 'html', newValue);\n    } else if (name === attributes.showLineNumbers) {\n      this.shadowRoot\n        .querySelectorAll('textarea + .CodeMirror')\n        .forEach((x) =>\n          x?.['CodeMirror']?.setLineNumbers(this.showLineNumbers)\n        );\n    }\n  }\n\n  constructor() {\n    super();\n\n    this.moduleMap = window['moduleMap'] ?? {};\n    this.attachShadow({ mode: 'open', delegatesFocus: true });\n  }\n\n  disconnectedCallback(): void {\n    this.resizeObserver?.disconnect();\n    this.resizeObserver = null;\n\n    this.shadowRoot.innerHTML = '';\n    this.dirty = true;\n    if (this.runTimer) clearTimeout(this.runTimer);\n    if (this.consoleUpdateTimer) clearTimeout(this.consoleUpdateTimer);\n    this.edited = false;\n    this.resetting = false;\n  }\n\n  connectedCallback(): void {\n    const shadowRoot = this.shadowRoot;\n\n    if (!this.id) this.id = randomId();\n\n    shadowRoot.appendChild(TEMPLATE.content.cloneNode(true));\n\n    const styleSlot =\n      shadowRoot.querySelector<HTMLSlotElement>('slot[name=style]');\n    if (styleSlot) {\n      const styleContent = styleSlot\n        .assignedNodes()\n        .map((node: HTMLElement) => node.innerHTML)\n        .join('')\n        .trim();\n      if (styleContent) {\n        const style = document.createElement('style');\n        style.innerHTML = styleContent;\n        shadowRoot.appendChild(style);\n      }\n    }\n\n    const container = document.createElement('div');\n    this.containerId = randomId();\n    container.id = this.containerId;\n\n    const containerContent = `<div inert class=\"original-content\" translate=\"no\"><slot name=\"html\"></slot><slot name=\"javascript\"></slot></div>\n\n  <div class=\"__code-playground-container\" translate=\"no\">\n  \n    <div class=\"editors hidden\" part=\"editors\"></div>\n\n    <div class=\"__code-playground-button-bar\" part=\"button-bar\">\n      <button id=\"reset-button\" part=\"button\" disabled><svg aria-hidden=\"true\" focusable=\"false\" data-prefix=\"far\" data-icon=\"history\" class=\"svg-inline--fa fa-history fa-w-16\" role=\"img\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\"><path fill=\"currentColor\" d=\"M504 255.532c.252 136.64-111.182 248.372-247.822 248.468-64.014.045-122.373-24.163-166.394-63.942-5.097-4.606-5.3-12.543-.443-17.4l16.96-16.96c4.529-4.529 11.776-4.659 16.555-.395C158.208 436.843 204.848 456 256 456c110.549 0 200-89.468 200-200 0-110.549-89.468-200-200-200-55.52 0-105.708 22.574-141.923 59.043l49.091 48.413c7.641 7.535 2.305 20.544-8.426 20.544H26.412c-6.627 0-12-5.373-12-12V45.443c0-10.651 12.843-16.023 20.426-8.544l45.097 44.474C124.866 36.067 187.15 8 256 8c136.811 0 247.747 110.781 248 247.532zm-167.058 90.173l14.116-19.409c3.898-5.36 2.713-12.865-2.647-16.763L280 259.778V116c0-6.627-5.373-12-12-12h-24c-6.627 0-12 5.373-12 12v168.222l88.179 64.13c5.36 3.897 12.865 2.712 16.763-2.647z\"></path></svg>Reset</button>\n\n      <button id=\"run-button\" part=\"button\"><svg aria-hidden=\"true\" focusable=\"false\" data-prefix=\"far\" data-icon=\"play\" class=\"svg-inline--fa fa-play fa-w-14\" role=\"img\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 448 512\"><path fill=\"currentColor\" d=\"M424.4 214.7L72.4 6.6C43.8-10.3 0 6.1 0 47.9V464c0 37.5 40.7 60.1 72.4 41.3l352-208c31.4-18.5 31.5-64.1 0-82.6zM48 453.5v-395c0-4.6 5.1-7.5 9.1-5.2l334.2 197.5c3.9 2.3 3.9 8 0 10.3L57.1 458.7c-4 2.3-9.1-.6-9.1-5.2z\"></path></svg>Run</button>\n    </div>\n\n    <div class=\"__code-playground-result\" translate=\"no\">\n      <div class=\"__code-playground-output\" part=\"output\" translate=\"no\"></div>\n    </div>\n\n  </div>`;\n\n    container.innerHTML = containerContent;\n    shadowRoot.appendChild(container);\n\n    // Add event handler for \"run\" and \"reset\" button\n    shadowRoot\n      .getElementById('run-button')\n      .addEventListener('click', () => this.run());\n    shadowRoot\n      .getElementById('reset-button')\n      .addEventListener('click', () => this.reset());\n\n    // Track insertion/changes to slots\n    shadowRoot.addEventListener('slotchange', () => {\n      this.dirty = true;\n      requestAnimationFrame(() => this.update());\n    });\n\n    this.resizeObserver = new ResizeObserver(() => {\n      requestAnimationFrame(() => {\n        shadowRoot\n          .querySelectorAll('textarea + .CodeMirror')\n          .forEach((x) => x?.['CodeMirror']?.refresh());\n      });\n    });\n\n    this.updateButtonBar();\n  }\n\n  get outputStylesheets(): string[] {\n    if (!this.hasAttribute('outputStylesheets')) return [];\n    return this.getAttribute('outputStylesheets').split(' ');\n  }\n  set outputStylesheets(value: string[]) {\n    this.setAttribute('outputStylesheets', value.join(' '));\n  }\n\n  get autorun(): 'never' | number {\n    if (!this.hasAttribute('autorun')) return DEFAULT_AUTORUN_DELAY;\n    const value = this.getAttribute('autorun');\n    if (value === 'never') return 'never';\n    if (isFinite(parseFloat(value))) return parseFloat(value);\n    return DEFAULT_AUTORUN_DELAY;\n  }\n\n  set autorun(value: 'never' | number) {\n    this.setAttribute('autorun', value.toString());\n    this.updateButtonBar();\n  }\n\n  get buttonBarVisibility(): string {\n    const val =\n      this.getAttribute('button-bar-visibility') ??\n      this.getAttribute('buttonBarVisibility') ??\n      'auto';\n\n    if (val === 'auto') {\n      // Auto = show only when needed (some changes have been made to\n      // the content)\n      if (this.edited || this.autorun === 'never') return 'visible';\n      return 'hidden';\n    }\n    return val;\n  }\n\n  set buttonBarVisibility(value: string) {\n    this.setAttribute('buttonBarVisibility', value);\n  }\n\n  get buttonBarVisible(): boolean {\n    return (\n      this.shadowRoot\n        .querySelector('.__code-playground-button-bar')\n        ?.classList.contains('visible') ?? false\n    );\n  }\n\n  updateButtonBar(): void {\n    const buttonBarVisibility = this.buttonBarVisibility;\n\n    const buttonBar = this.shadowRoot.querySelector(\n      '.__code-playground-button-bar'\n    );\n\n    if (!buttonBar) return;\n\n    const resetButton = this.shadowRoot.getElementById(\n      'reset-button'\n    )! as HTMLButtonElement;\n    if (resetButton) resetButton.disabled = !this.edited;\n\n    const runButton = this.shadowRoot.getElementById(\n      'run-button'\n    )! as HTMLButtonElement;\n    if (runButton) runButton.disabled = false;\n\n    runButton?.classList.toggle('visible', this.autorun === 'never');\n    buttonBar?.classList.toggle('visible', buttonBarVisibility === 'visible');\n  }\n\n  // The content of the code section has changed. Rebuild the editors\n  update(): void {\n    if (!this.dirty) return;\n    this.dirty = false;\n\n    // 1. Update the button bar\n    this.updateButtonBar();\n\n    const shadowRoot = this.shadowRoot;\n    const editors = shadowRoot.querySelector<HTMLElement>('.editors');\n    // In some cases, update is triggered but the editors are not yet\n    // available.\n    if (!editors) return;\n\n    // 2. Collect the content of each editor\n    const slots = [\n      ...shadowRoot.querySelectorAll<HTMLSlotElement>('.original-content slot'),\n    ];\n    let content = '';\n    for (const slot of slots) {\n      let text = slot\n        .assignedNodes()\n        .map((node: HTMLElement) => node.innerHTML)\n        .join('');\n      if (text) {\n        // Remove empty comments. This 'trick' is used to work around\n        // an issue where Eleventy ignores empty lines in HTML blocks,\n        // so an empty comment is inserted, but it now needs to be removed\n        // so that the empty line is properly picked up by CodeMirror. Sigh.\n        text = text.replace(/<!-- -->/g, '');\n        const language = slot.name.toLowerCase();\n        content += `<label part=\"label\">${\n          { html: 'HTML', javascript: 'JavaScript', css: 'CSS', json: 'JSON' }[\n            language\n          ] ?? language\n        }</label>\n        <div part=\"editor\" class=\"__code-playground-editor ${language}\">\n            <textarea spellcheck=\"false\" autocorrect=\"off\"  autocapitalize=\"off\" data-language=\"${language}\">${text}</textarea> \n        </div>`;\n      }\n    }\n    editors.innerHTML = content;\n\n    // 3. Setup editors\n    // @todo: migrate to CodeMirror 6: https://codemirror.net/docs/migration/\n    // @todo: bundle CodeMirror library with rollup\n    // @todo: replace .fromTextArea() with new EditorView()\n    // @todo: update CSS (see DOM Structure)\n    if ('CodeMirror' in window && window.CodeMirror !== undefined) {\n      this.resizeObserver.disconnect();\n      shadowRoot\n        .querySelectorAll<HTMLTextAreaElement>('.editors textarea')\n        .forEach((x: HTMLTextAreaElement) => {\n          // Watch for re-layout and invoke CodeMirror refresh when they happen\n          this.resizeObserver.observe(x.parentElement);\n\n          const lang =\n            {\n              ts: 'typescript',\n              typescript: 'typescript',\n              js: 'javascript',\n              javascript: 'javascript',\n              json: { name: 'javascript', json: true },\n              css: 'css',\n              html: { name: 'xml', htmlMode: true },\n            }[x.dataset.language] ?? 'javascript';\n\n          const editor = CodeMirror.fromTextArea(x, {\n            lineNumbers: this.showLineNumbers,\n            lineWrapping: true,\n            mode: lang,\n            theme: 'tomorrow-night',\n          });\n          editor.setValue(sanitizeInput(x.value));\n          editor.setSize('100%', '100%');\n          if (x.dataset.language === 'javascript')\n            mark(shadowRoot, 'javascript', this.getAttribute('markLine'));\n\n          mark(\n            shadowRoot,\n            x.dataset.language,\n            this.getAttribute(`mark${toTitleCase(x.dataset.language)}Line`)\n          );\n\n          editor.on('change', () => this.editorContentChanged());\n        });\n\n      editors.classList.remove('hidden');\n    }\n\n    // 4. Run the playground\n    if (this.autorun !== 'never') this.run();\n\n    // Refresh the codemirror layouts\n    // (important to get the linenumbers to display correctly)\n    if ('CodeMirror' in window && window.CodeMirror !== undefined) {\n      setTimeout(\n        () =>\n          shadowRoot\n            .querySelectorAll('textarea + .CodeMirror')\n            .forEach((x) => x?.['CodeMirror']?.refresh()),\n        128\n      );\n    }\n  }\n\n  async run() {\n    const shadowRoot = this.shadowRoot;\n    const result = shadowRoot.querySelector('.__code-playground-result');\n    if (!result) return;\n\n    // Remove all the script tags that might be there.\n    // (This includes the script tags that were added by the previous run)\n    result\n      .querySelectorAll('.__code-playground-result > script')\n      .forEach((x) => result.removeChild(x));\n\n    // Remove all the consoles that might be there.\n    // result\n    //   .querySelectorAll('.__code-playground-result >.__code-playground-console')\n    //   .forEach((x) => result.removeChild(x));\n\n    this.pseudoConsole.clear();\n\n    // Setup the HTML in 'output'\n    let htmlContent = '';\n    const htmlEditor = shadowRoot.querySelector(\n      'textarea[data-language=\"html\"] + .CodeMirror'\n    );\n    if (htmlEditor) {\n      htmlContent = htmlEditor['CodeMirror']?.getValue();\n    } else {\n      htmlContent =\n        shadowRoot.querySelector<HTMLTextAreaElement>(\n          'textarea[data-language=\"html\"]'\n        )?.value ?? '';\n    }\n    // If the HTML content contains any <script> tags, extract them\n    const scriptTags = htmlContent.match(/<script.*>.*?<\\/script>/g);\n    scriptTags?.forEach((x) => {\n      const m = x.match(/<script([^>]*?)>(.*)<\\/script>/);\n      const regex = new RegExp(\n        '[\\\\s\\\\r\\\\t\\\\n]*([a-z0-9\\\\-_]+)[\\\\s\\\\r\\\\t\\\\n]*=[\\\\s\\\\r\\\\t\\\\n]*([\\'\"])((?:\\\\\\\\\\\\2|(?!\\\\2).)*)\\\\2',\n        'ig'\n      );\n      const attributes = {};\n      let match;\n      while ((match = regex.exec(m[1]))) {\n        attributes[match[1]] = match[3];\n      }\n      const newScript = document.createElement('script');\n      Object.keys(attributes).forEach((x) => (newScript[x] = attributes[x]));\n      try {\n        newScript.textContent = this.processLiveCodeJavascript(m[2]);\n        result.appendChild(newScript);\n      } catch (err) {\n        // If there's a syntax error in the script, catch it here\n        this.pseudoConsole.error(err.message);\n      }\n    });\n\n    try {\n      this.outputStylesheets.forEach((x) => {\n        const href = x.trim();\n        if (href.length > 0) {\n          htmlContent = `<link rel=\"stylesheet\" href=\"${href}\"></link>${htmlContent}`;\n        }\n      });\n      const outputElement = shadowRoot.querySelector(\n        'div.__code-playground-result > div.__code-playground-output'\n      );\n      if (outputElement) {\n        if (htmlContent) outputElement.classList.add('visible');\n        else outputElement.classList.remove('visible');\n        outputElement.innerHTML = htmlContent;\n      }\n    } catch (e) {\n      // If there's a syntax error in the markup, catch it here\n      this.pseudoConsole.error(e.message);\n    }\n\n    // Add a new script tag\n    const jsEditor = shadowRoot.querySelector(\n      'textarea[data-language=\"javascript\"] + .CodeMirror'\n    );\n    let jsContent = '';\n    if (jsEditor) {\n      jsContent = jsEditor['CodeMirror']?.getValue();\n    } else {\n      jsContent =\n        shadowRoot.querySelector<HTMLTextAreaElement>(\n          'textarea[data-language=\"javascript\"]'\n        )?.value ?? '';\n    }\n\n    // If there are any custom elements in the HTML wait for them to be\n    // defined before executing the script which may refer to them\n    for (const x of htmlContent.matchAll(\n      /\\<([a-zA-Z0-9]+\\-[a-zA-Z0-9]*)[^\\>]*\\>/g\n    )) {\n      await customElements.whenDefined(x[1]);\n    }\n\n    const newScript = document.createElement('script');\n    newScript.type = 'module';\n    try {\n      newScript.textContent = this.processLiveCodeJavascript(jsContent);\n      // The script is executed when it is inserted in the DOM\n      result.appendChild(newScript);\n    } catch (err) {\n      // If there's a syntax error in the script, catch it here\n      this.pseudoConsole.error(err.message);\n    }\n    // Temporarily set the window error handler to catch and report\n    // on syntax errors that may be present in the script\n    const previousErrorHandler = window.onerror;\n    window.onerror = (msg, url, line, _colno, error) => {\n      if (url === window.location.href) {\n        if (line === 0) {\n          if (typeof error?.toString === 'function') {\n            this.pseudoConsole.error(msg + error.toString());\n          } else {\n            this.pseudoConsole.error(msg);\n          }\n        } else {\n          this.pseudoConsole.error('Line ' + (line - 1) + '\\n   ' + msg);\n        }\n      }\n    };\n    setTimeout(() => {\n      window.onerror = previousErrorHandler;\n    }, 500);\n  }\n\n  editorContentChanged(): void {\n    if (this.resetting) return;\n\n    this.edited = true;\n\n    this.updateButtonBar();\n\n    if (this.autorun !== 'never') {\n      if (this.runTimer) clearTimeout(this.runTimer);\n      if (this.autorun === 0) this.run();\n      else this.runTimer = setTimeout(() => this.run(), this.autorun);\n    }\n  }\n\n  reset(): void {\n    this.resetting = true;\n    if (this.runTimer) clearTimeout(this.runTimer);\n    const slots = this.shadowRoot.querySelectorAll('.original-content slot');\n    slots.forEach((slot: HTMLSlotElement) => {\n      const text = slot\n        .assignedNodes()\n        .map((node: HTMLElement) => node.innerText)\n        .join('');\n      if (text) {\n        const editor = this.shadowRoot.querySelector(\n          `textarea[data-language=\"${slot.name}\"] + .CodeMirror`\n        );\n        if (editor) {\n          editor['CodeMirror']?.setValue(sanitizeInput(text));\n\n          if (slot.name === 'javascript')\n            mark(this.shadowRoot, 'javascript', this.markLine);\n          else {\n            mark(\n              this.shadowRoot,\n              slot.name,\n              this.getAttribute(`mark-${slot.name}-line`)\n            );\n          }\n        } else {\n          const textarea = this.shadowRoot.querySelector<HTMLTextAreaElement>(\n            `textarea[data-language=\"${slot.name}\"]`\n          );\n          if (textarea) textarea.value = sanitizeInput(text);\n        }\n      }\n    });\n    this.updateButtonBar();\n    this.run();\n    this.edited = false;\n    this.resetting = false;\n    this.updateButtonBar();\n  }\n\n  get outputElement(): HTMLElement {\n    return this.shadowRoot.querySelector('div.__code-playground-output');\n  }\n\n  get pseudoConsole(): Console & {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    catch: (err: any) => void;\n  } {\n    const shadowRoot = this.shadowRoot;\n    // root ?? (document.currentScript.getRootNode() as HTMLElement);\n    let console = shadowRoot.querySelector<HTMLElement>(\n      '.__code-playground-console'\n    );\n    if (!console) {\n      const result = shadowRoot.querySelector('.__code-playground-result');\n      if (!result) return { ...window.console, catch: () => {} };\n      console = document.createElement('pre');\n      console.classList.add('__code-playground-console');\n      console.setAttribute('part', 'console');\n      result.appendChild(console);\n    }\n    const updateConsole = () => {\n      if (this.consoleUpdateTimer) clearTimeout(this.consoleUpdateTimer);\n      this.consoleUpdateTimer = setTimeout(() => {\n        console.innerHTML = this.consoleContent;\n        if (this.consoleContent) console.classList.add('visible');\n        else console.classList.remove('visible');\n        console.scrollTop = console.scrollHeight;\n      }, 100);\n    };\n    const appendConsole = (msg: string, cls?: string) => {\n      let lines = this.consoleContent?.split('\\n') ?? [];\n      if (lines.length > CONSOLE_MAX_LINES)\n        lines = lines.slice(lines.length - CONSOLE_MAX_LINES + 1);\n\n      // Simulate a slow teleprinter\n      if (this.consoleUpdateTimer) clearTimeout(this.consoleUpdateTimer);\n      console.classList.add('visible');\n      const that = this;\n      echo(\n        msg + '\\n',\n        (s) => {\n          that.consoleContent =\n            (cls ? `<span class=\"${cls}\">` : '') +\n            lines.join('\\n') +\n            '&nbsp;&nbsp;'.repeat(\n              parseInt(console.dataset['group-level']) ?? 0\n            ) +\n            s +\n            (cls ? '</span>' : '');\n          console.innerHTML = that.consoleContent;\n          console.scrollTop = console.scrollHeight;\n        },\n        () => updateConsole()\n      );\n\n      // msg += '\\n';\n      // this.consoleContent =\n      //   (cls ? `<span class=\"${cls}\">` : '') +\n      //   lines.join('\\n') +\n      //   '&nbsp;&nbsp;'.repeat(parseInt(console.dataset['group-level']) ?? 0) +\n      //   msg +\n      //   (cls ? '</span>' : '');\n\n      // updateConsole();\n    };\n    return {\n      ...window.console,\n      assert: (condition: boolean, ...args) => {\n        if (!condition) {\n          let msg = interpolate(args);\n          if (msg.length > 0) msg = ':\\n   ' + msg;\n          appendConsole('Assertion failed' + msg, 'error');\n        }\n      },\n      // non-standard\n      catch: (err) => {\n        const m = err.stack.split('at ')[1].match(/:([0-9]+):([0-9]+)/) || [];\n        appendConsole(\n          '<span class=\"error\">' +\n            (m[1] ? 'Line ' + parseInt(m[1]) + '\\n   ' : '') +\n            err.message +\n            '</span>'\n        );\n      },\n      clear: () => {\n        this.consoleContent = '';\n        updateConsole();\n      },\n      debug: (...args) => appendConsole(interpolate(args)),\n      dir: (...args) => appendConsole(interpolate(args)),\n      error: (...args) => appendConsole(interpolate(args), 'error'),\n      group: (...args) => {\n        if (arguments.length > 0) appendConsole(interpolate(args), 'group');\n        console.dataset['group-level'] = Number(\n          (parseInt(console.dataset['group-level']) ?? 0) + 1\n        ).toString();\n      },\n      groupCollapsed: (...args) => {\n        if (arguments.length > 0) appendConsole(interpolate(args), 'group');\n        console.dataset['group-level'] = Number(\n          (parseInt(console.dataset['group-level']) ?? 0) + 1\n        ).toString();\n      },\n      groupEnd: () => {\n        console.dataset['group-level'] = Number(\n          (parseInt(console.dataset['group-level']) ?? 0) - 1\n        ).toString();\n      },\n      info: (...args) => appendConsole(interpolate(args), 'info'),\n      log: (...args) => appendConsole(interpolate(args), 'log'),\n      warn: (...args) => appendConsole(interpolate(args), 'warning'),\n      time: (label) => {\n        this.timers[label] = Date.now();\n      },\n      timeEnd: (label, ...args) => {\n        if (!this.timers[label]) return appendConsole(interpolate(args), 'log');\n        const time = Date.now() - this.timers[label];\n        if (time > 1000) {\n          // Display two digits after the decimal point\n          return appendConsole(\n            `${interpolate(args)}\\n${label}: ${Number(time / 1000).toFixed(\n              2\n            )}s`,\n            'log'\n          );\n        }\n        return appendConsole(\n          `${interpolate(args)}\\n${label}: ${time}ms`,\n          'log'\n        );\n      },\n    };\n  }\n\n  /**\n   * Process a script fragment to be able to run inside the playground\n   * - replace querySelector/querySelectoAll calls\n   * - replace `console.*` calls\n   * - extract imports\n   * - wrap in a try/catch block\n   */\n  processLiveCodeJavascript(script: string): string {\n    if (!script) return '';\n    const jsID = randomJavaScriptId();\n\n    // Replace document.querySelector.* et al with section.querySelector.*\n    script = script.replace(\n      /([^a-zA-Z0-9_-]?)document(\\s*\\.\\s*querySelector\\s*\\()/g,\n      '$1output' + jsID + '$2'\n    );\n    script = script.replace(\n      /([^a-zA-Z0-9_-]?)document(\\s*\\.\\s*querySelectorAll\\s*\\))/g,\n      '$1output' + jsID + '$2'\n    );\n\n    script = script.replace(\n      /([^a-zA-Z0-9_-]?)document(\\s*\\.\\s*)getElementById\\s*\\(/g,\n      '$1output' + jsID + '$2' + \"querySelector('#'+\"\n    );\n\n    // Replace console.* with pseudoConsole.*\n    // script = script.replace(\n    //   /([^a-zA-Z0-9_-])?console(\\s*\\.\\s*)/g,\n    //   '$1console' + jsID + '$2'\n    // );\n\n    // Extract import (can't be inside a try...catch block)\n    const imports = [];\n    script = script.replace(\n      /([^a-zA-Z0-9_-]?import.*)('.*'|\".*\");/g,\n      (match, p1, p2) => {\n        imports.push([match, p1, p2.slice(1, p2.length - 1)]);\n        return `/* ${p1}${p2} */`;\n      }\n    );\n\n    // Important: keep the ${script} on a separate line. The content could\n    // be \"// a comment\" which would result in the script failing to parse\n    //\n    // Note: the function is marked `async` so that await can be used in its body\n\n    return (\n      imports\n        .map((x) => {\n          if (this.moduleMap[x[2]]) return `${x[1]} \"${this.moduleMap[x[2]]}\";`;\n          return x[0];\n        })\n        .join('') +\n      `const playground${jsID} = document.getElementById(\"${this.id}\").shadowRoot.host;` +\n      `const console${jsID} = window.console; window.console = playground${jsID}.pseudoConsole;` +\n      `const output${jsID} = playground${jsID}.outputElement;` +\n      '(async function() {try {\\n' +\n      script +\n      `\\n} catch(err) { typeof console.catch === 'function' ? console.catch(err) : console.error(err) }}()); window.console = console${jsID};`\n    );\n  }\n\n  //\n  // Property/attributes\n  //\n\n  // 'showLineNumbers' is true if line numbers should be displayed\n  get showLineNumbers(): boolean {\n    return (\n      this.hasAttribute('show-line-numbers') ||\n      this.hasAttribute('showLineNumbers')\n    );\n  }\n\n  set showLineNumbers(val: boolean) {\n    this.removeAttribute('showLineNumbers');\n    if (val) this.setAttribute('show-line-numbers', '');\n    else this.removeAttribute('show-line-numbers');\n  }\n\n  get markLine(): string {\n    return (\n      this.getAttribute('mark-line') ||\n      this.getAttribute('markLine') ||\n      this.getAttribute('mark-javascript-line') ||\n      this.getAttribute('markJavaScriptLine')\n    );\n  }\n\n  set markLine(val: string) {\n    this.removeAttribute('markLine');\n    this.setAttribute('mark-line', val);\n  }\n}\n\nfunction randomId() {\n  return (\n    'i' +\n    (Date.now().toString(36).slice(-2) +\n      Math.floor(Math.random() * 0x186a0).toString(36))\n  );\n}\n\nfunction randomJavaScriptId() {\n  return (\n    Date.now().toString(26).slice(-2) +\n    Math.floor(Math.random() * 0x186a0).toString(26)\n  );\n}\n\nconst INDENT = '  ';\n\n/**\n * Convert a basic type or an object into a HTML string\n */\nfunction asString(\n  depth: number,\n  value: unknown,\n  options: { quote?: string; ancestors?: Record<string, any>[] } = {}\n): { text: string; itemCount: number; lineCount: number } {\n  options.quote ??= '\"';\n  options.ancestors ??= [];\n\n  //\n  // BOOLEAN\n  //\n  if (typeof value === 'boolean') {\n    return {\n      text: `<span class=\"boolean\">${escapeHTML(String(value))}</span>`,\n      itemCount: 1,\n      lineCount: 1,\n    };\n  }\n\n  //\n  // NUMBER\n  //\n  if (typeof value === 'number') {\n    return {\n      text: `<span class=\"number\">${escapeHTML(String(value))}</span>`,\n      itemCount: 1,\n      lineCount: 1,\n    };\n  }\n  //\n  // STRING\n  //\n  if (typeof value === 'string') {\n    if (options.quote.length === 0) {\n      return {\n        text: escapeHTML(value),\n        itemCount: 1,\n        lineCount: value.split(/\\r\\n|\\r|\\n/).length,\n      };\n    }\n    return {\n      text: `<span class=\"string\">${escapeHTML(\n        options.quote + value + options.quote\n      )}</span>`,\n      itemCount: 1,\n      lineCount: value.split(/\\r\\n|\\r|\\n/).length,\n    };\n  }\n\n  //\n  // FUNCTION\n  //\n  if (typeof value === 'function') {\n    let functionValue = '';\n    if ('toString' in value) functionValue = escapeHTML(value.toString());\n    else functionValue = escapeHTML(String(value));\n\n    return {\n      text: `<span class=\"function\">ƒ  ${functionValue}</span>`,\n      itemCount: 1,\n      lineCount: functionValue.split(/\\r\\n|\\r|\\n/).length,\n    };\n  }\n\n  //\n  // NULL/UNDEFINED\n  //\n  if (value === null || value === undefined) {\n    return {\n      text: `<span class=\"null\">${escapeHTML(String(value))}</span>`,\n      itemCount: 1,\n      lineCount: 1,\n    };\n  }\n\n  // Avoid infinite recursions (e.g. `window.window`)\n  if (depth > 20) {\n    return {\n      text: '<span class=\"sep\">(...)</span>',\n      itemCount: 1,\n      lineCount: 1,\n    };\n  }\n\n  //\n  // ARRAY\n  //\n  if (Array.isArray(value)) {\n    if (options.ancestors.includes(value))\n      return {\n        text: '<span class=\"sep\">[...]</span>',\n        itemCount: 1,\n        lineCount: 1,\n      };\n\n    const result = [];\n    // To account for sparse array, we can't use map() (it skips over empty slots)\n    for (let i = 0; i < value.length; i++) {\n      if (Object.keys(value).includes(Number(i).toString())) {\n        result.push(\n          asString(depth + 1, value[i], {\n            ancestors: [...options.ancestors, value],\n          })\n        );\n      } else {\n        result.push({\n          text: '<span class=\"empty\">empty</span>',\n          itemCount: 1,\n          lineCount: 1,\n        });\n      }\n    }\n    const itemCount = result.reduce((acc, val) => acc + val.itemCount, 0);\n    const lineCount = result.reduce(\n      (acc, val) => Math.max(acc, val.lineCount),\n      0\n    );\n    if (itemCount > 5 || lineCount > 1) {\n      return {\n        text:\n          \"<span class='sep'>[</span>\\n\" +\n          INDENT.repeat(depth + 1) +\n          result\n            .map((x, i) => '<span class=\"index\">' + i + '</span>' + x.text)\n            .join(\"<span class='sep'>, </span>\\n\" + INDENT.repeat(depth + 1)) +\n          '\\n' +\n          INDENT.repeat(depth) +\n          \"<span class='sep'>]</span>\",\n        itemCount,\n        lineCount: 2 + result.reduce((acc, val) => acc + val.lineCount, 0),\n      };\n    }\n    return {\n      text:\n        \"<span class='sep'>[</span>\" +\n        result.map((x) => x.text).join(\"<span class='sep'>, </span>\") +\n        \"<span class='sep'>]</span>\",\n      itemCount: Math.max(1, itemCount),\n      lineCount: 1,\n    };\n  }\n\n  //\n  // HTMLElement\n  //\n  if (value instanceof Element) {\n    if (options.ancestors.includes(value))\n      return {\n        text: '<span class=\"object\">Element...</span>',\n        itemCount: 1,\n        lineCount: 1,\n      };\n\n    let result = `<${value.localName}`;\n    let lineCount = 1;\n    Array.from(value.attributes).forEach((x) => {\n      result += ' ' + x.localName;\n      const val = value.getAttribute(x.localName);\n      if (val.length > 0) result += '=\"' + val + '\"';\n    });\n    result += '>';\n\n    if (value.innerHTML) {\n      let content = value.innerHTML.split('\\n');\n      if (content.length > 4) {\n        content = [...content.slice(0, 5), '(...)\\n'];\n      }\n      result += content.join('\\n');\n      lineCount += content.length;\n    }\n\n    result += `</${value.localName}>`;\n    return {\n      text: `<span class=\"object\">${escapeHTML(result)}</span>`,\n      itemCount: 1,\n      lineCount: lineCount,\n    };\n  }\n\n  //\n  // OBJECT\n  //\n  if (typeof value === 'object') {\n    if (options.ancestors.includes(value))\n      return {\n        text: '<span class=\"sep\">{...}</span>',\n        itemCount: 1,\n        lineCount: 1,\n      };\n\n    if (value instanceof Map) {\n      const kv = Object.fromEntries(value);\n      const result = asString(depth, kv, {\n        ancestors: [...options.ancestors, value],\n      });\n      return { ...result, text: '<span class=object>Map</span>' + result.text };\n    }\n    if (value instanceof Set) {\n      const elts = Array.from(value);\n      const result = asString(depth, elts, {\n        ancestors: [...options.ancestors, value],\n      });\n      return { ...result, text: '<span class=object>Set</span>' + result.text };\n    }\n\n    if ('toString' in value) {\n      const s = value.toString();\n      if (s !== '[object Object]')\n        return {\n          text: escapeHTML(s),\n          itemCount: 1,\n          lineCount: 1,\n        };\n    }\n    let props = Object.keys(value);\n\n    Object.getOwnPropertyNames(value).forEach((prop) => {\n      if (!props.includes(prop)) {\n        props.push(prop);\n      }\n    });\n\n    // If this is not a plain literal object, filter out properties that\n    // start with an underscore\n    if (Object.getPrototypeOf(value) !== Object.prototype)\n      props = props.filter((x) => !x.startsWith('_'));\n    if (props.length === 0 && typeof props.toString === 'function') {\n      const result = value.toString();\n      if (result === '[object Object]')\n        return {\n          text: '<span class=\"sep\">{}</span>',\n          itemCount: 1,\n          lineCount: 1,\n        };\n      return {\n        text: result,\n        itemCount: 1,\n        lineCount: result.split(/\\r\\n|\\r|\\n/).length,\n      };\n    }\n\n    const propStrings = props.sort().map((key) => {\n      if (typeof value[key] === 'object' && value[key] !== null) {\n        let result = asString(depth + 1, value[key], {\n          ancestors: [...options.ancestors, value],\n        });\n        if (result.itemCount > 500) {\n          result = {\n            text: \"<span class='sep'>(...)</span>\",\n            itemCount: 1,\n            lineCount: 1,\n          };\n        }\n        return {\n          text: `<span class=\"property\">${key}</span><span class='sep'>: </span>${result.text}`,\n          itemCount: result.itemCount,\n          lineCount: result.lineCount,\n        };\n      }\n      if (typeof value[key] === 'function') {\n        return {\n          text: `<span class=\"property\">${key}</span></span><span class='sep'>: </span><span class='function'>ƒ (...)</span>`,\n          itemCount: 1,\n          lineCount: 1,\n        };\n      }\n      const result = asString(depth + 1, value[key], {\n        ancestors: [...options.ancestors, value],\n      });\n      return {\n        text: `<span class=\"property\">${key}</span></span><span class='sep'>: </span>${result.text}`,\n        itemCount: result.itemCount,\n        lineCount: result.lineCount,\n      };\n    });\n    const itemCount = propStrings.reduce((acc, val) => acc + val.itemCount, 0);\n    const lineCount = propStrings.reduce((acc, val) => acc + val.lineCount, 0);\n    if (itemCount < 5) {\n      return {\n        text:\n          \"<span class='sep'>{</span>\" +\n          propStrings\n            .map((x) => x.text)\n            .join(\"</span><span class='sep'>, </span>\") +\n          \"<span class='sep'>}</span>\",\n        itemCount,\n        lineCount,\n      };\n    }\n    return {\n      text:\n        \"<span class='sep'>{</span>\\n\" +\n        INDENT.repeat(depth + 1) +\n        propStrings\n          .map((x) => x.text)\n          .join(\n            \"</span><span class='sep'>,</span>\\n\" + INDENT.repeat(depth + 1)\n          ) +\n        '\\n' +\n        INDENT.repeat(depth) +\n        \"<span class='sep'>}</span>\",\n      itemCount: itemCount,\n      lineCount: lineCount + 2,\n    };\n  }\n  return { text: String(value), itemCount: 1, lineCount: 1 };\n}\n\nfunction interpolate(args: unknown[]): string {\n  const format = args[0];\n  const rest = args.slice(1);\n\n  if (typeof format === 'string' && format.includes('%') && rest.length) {\n    const string = format.replace(\n      /(%[oscdif]|%(\\d*)\\.(\\d*)[dif])/g,\n      (all, key, width = '', dp): string => {\n        if (key === '%o') {\n          // object\n          return asString(0, rest.shift()).text;\n        }\n\n        if (key === '%s') {\n          // string\n          return rest.shift() as string;\n        }\n\n        if (key === '%c') {\n          return `</span><span style=\"${rest.shift()}\">`;\n        }\n\n        const value = rest.shift();\n        let res = null;\n\n        if (key.substr(-1) === 'f' && typeof value === 'number') {\n          if (isNaN(parseInt(dp, 10))) {\n            res = value;\n          } else {\n            res = value.toFixed(dp);\n          }\n        } else if (typeof value === 'string') {\n          res = parseInt(value, 10);\n        }\n\n        if (width === '') {\n          return res;\n        }\n\n        return asString(0, res).text.padStart(width, ' ');\n      }\n    );\n\n    return string;\n  }\n\n  return args.map((x) => asString(0, x, { quote: '' }).text).join(' ');\n}\n\nfunction escapeHTML(s: string): string {\n  return s\n    .replace(/&/g, '&amp;')\n    .replace(/</g, '&lt;')\n    .replace(/>/g, '&gt;')\n    .replace(/\"/g, '&quot;')\n    .replace(/'/g, '&#039;');\n}\n\nfunction sanitizeInput(s: string): string {\n  s = s.trim();\n\n  // Remove XML comments, including the <!-- htmlmin:ignore --> used to\n  // indicate to terser to skip sections, so as to preserve the formatting.\n  s = s.replace(/<!--.*-->\\n?/g, '');\n\n  // Remove lines with only a `//`\n  s = s\n    .split('\\n')\n    .map((x) => (x.trim() === '//' ? '' : x))\n    .join('\\n');\n  return s;\n}\n\nfunction mark(root: ShadowRoot, language: string, arg: string | undefined) {\n  if (arg === undefined) return;\n  const editor = root.querySelector(\n    `textarea[data-language=\"${language}\"] + .CodeMirror`\n  )?.['CodeMirror'];\n\n  if (!editor) return;\n\n  // Remove any marked lines\n  for (let i = editor.doc.firstLine(); i <= editor.doc.lastLine(); i++)\n    editor.doc.removeLineClass(i, 'wrap', 'marked');\n\n  // Mark the lines\n  // Either \"5\", or \"5-6\", or \"5, 7, 9\", or \"5-7, 9\"\n  if (typeof arg === 'string') {\n    for (let item of arg.split(',')) {\n      item = item.trim();\n      if (item === '' || item === 'none') continue;\n      if (/\\d+-\\d+/.test(item)) {\n        let [, from, to] = arg.match(/(\\d+)-(\\d+)/);\n        for (\n          let i = parseInt(from);\n          i <= Math.max(parseInt(from), parseInt(to));\n          i++\n        )\n          editor.doc.addLineClass(i - 1, 'wrap', 'marked');\n        return;\n      } else {\n        editor.doc.addLineClass(parseInt(arg) - 1, 'wrap', 'marked');\n      }\n    }\n  }\n}\n\n// Register the tag for the element, only if it isn't already registered\ncustomElements.get('code-playground') ??\n  customElements.define('code-playground', CodePlaygroundElement);\n\nfunction echo(\n  rest: string,\n  tty: (s: string) => void,\n  finalize: () => void,\n  output?: string\n) {\n  tty(output ?? '' + rest);\n  finalize();\n\n  // if (!rest) {\n  //   finalize();\n  //   return;\n  // }\n\n  // let delay = 4;\n  // setTimeout(\n  //   () =>\n  //     requestAnimationFrame(() => {\n  //       tty((output ?? '') + rest[0]);\n  //       echo(rest.substring(1), tty, finalize, (output ?? '') + rest[0]);\n  //     }),\n  //   delay\n  // );\n}\n\nfunction toTitleCase(s: string): string {\n  return s.charAt(0).toUpperCase() + s.slice(1);\n}\n"],"names":[],"mappings":"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"}