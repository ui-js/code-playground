{"version":3,"file":"code-playground.js","sources":["../src/code-playground.ts"],"sourcesContent":["/* tomorrow-night */\nconst base00 = '#35434e'; // was #1d1f21;\nconst base01 = '#282a2e';\nconst base02 = '#373b41';\nconst base03 = '#969896';\nconst base04 = '#b4b7b4';\nconst base05 = '#c5c8c6'; // base05\n// const base06 = \"#e0e0e0\";\n// const base07 = \"#ffffff\";\nconst base0c = '#cc6666'; // base08\nconst base09 = '#de935f';\nconst base0a = '#f0c674';\nconst base0b = '#b5bd68';\nconst base08 = '#8abeb7'; // base0c\nconst base0d = '#81a2be'; // base0d\nconst base0e = '#b294bb';\n// const base0f = \"#a3685a\";\n\nconst RED = base0c;\nconst YELLOW = base0a;\n// const BLUE = base0d;\n// const GREEN = base0b;\n\nconst TAB_HEIGHT = 36;\nconst TAB_WIDTH = 150;\n\nconst TEMPLATE = document.createElement('template');\nTEMPLATE.innerHTML = `\n<link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/codemirror/5.58.1/codemirror.min.css\">\n<style>\n    :host {\n      display: block;\n      font-family:-apple-system, BlinkMacSystemFont, \"Segoe UI\",\n        Roboto, Oxygen-Sans, Ubuntu, Cantarell,\n        \"Helvetica Neue\", \"Source Sans Pro\", sans-serif;\n      line-height: 1.5;\n    }\n    :host([hidden]) {\n      display: none;\n    }\n    :host > div {\n      display: flex;\n      flex-flow: row;\n      width: 100%;\n      height: 100%;\n      margin-left: 0;\n      margin-right: 0;\n      justify-content: center;\n      align-items: center;\n    }\n    :host > div.stack-layout {\n      display: block;\n    }\n    .original-content {\n      display: none;\n    }\n    .source {\n      display: flex;\n      flex-flow: column;\n      justify-content: space-between;\n      margin-top: 0;\n      margin-bottom: 0;\n      margin-right: .5em;\n      width: calc(50% - .5em);\n      height: 100%;\n      min-width: 300px;\n      padding: 8px;\n      border-radius: 8px;\n      background: ${base00};\n    }\n    textarea {\n      display: block;\n      border: 1px solid rgba(0,0,0,.25);\n      outline: none;\n      resize: vertical;\n      width: 100%;\n      min-height: 4em;\n      font-family: 'JetBrains Mono', 'IBM Plex Mono', 'Fira Code', 'Source Code Pro',  monospace;\n      font-size: 16px;\n      line-height: 1.2;\n    }\n    .source textarea {\n      color: ${base05};\n      background: ${base00};\n      border: none;\n      height: 100%;\n    }\n    .result {\n      width: calc(50% - .5em);\n      margin-left: .5em;\n    }\n    .output {\n      border-radius: 8px;\n      padding: 8px;\n      border: 1px solid rgba(0, 0, 0, .2);\n    }\n    .output textarea {\n      width: calc(100% - 16px);\n    }\n    .stack-layout .source, .stack-layout .result {\n      width: auto;\n      margin: 0;\n      background: transparent\n    }\n    .stack-layout .source {\n      border: 1px solid rgba(0, 0, 0, .2);\n      padding: 0;\n    }\n    .stack-layout .result  {\n      margin-top: 2em;\n    }\n    .stack-layout [type=radio]:checked ~ label {\n      color: #666;\n    }\n    .console {\n      max-height: 50vh;\n      padding: 8px;\n      border-radius: 8px;\n      overflow: auto;\n      font-size: 14px;\n      color: ${base05};\n      background: ${base00};\n      white-space: pre-wrap;\n      border: 1px solid rgba(0, 0, 0, .2);\n    }\n    .console .sep {\n      color: ${base05};\n    }\n    .console .index {\n      color: ${base05};\n      opacity: .3;\n      float: left;\n      width: 0;\n      font-style: italic;\n    }\n    .console .boolean {\n      color: ${base0e};\n      font-weight: bold;\n    }\n    .console .empty {\n      color: ${base0e};\n      font-style: italic;\n    }\n    .console .null {\n      color: ${base0e};\n      font-style: italic;\n    }\n    .console .string {\n      color: ${base0a};\n      font-weight: bold;\n    }\n    .console .function {\n      color: ${base0b};\n    }\n    .console .number {\n      color: ${base0e};\n    }\n    .console .property {\n      color: ${base0b}\n    }\n    .console .object {\n        color: ${base0b}\n      }\n      .console .error {\n      display: block;\n      width: calc(100% - 10px);\n      padding-right: 4px;\n      padding-top: 8px;\n      padding-bottom:8px;\n      padding-left: 6px;\n      background: rgba(204, 102, 102, .4);\n      color: white;\n      border-left:  4px solid ${RED}\n    }\n    .console .warning {\n      color: ${YELLOW}\n    }\n    .console .group {\n      font-weight: bold;\n    }\n    \n    .tabs {\n      position: relative;   \n      display: flex;\n      flex-flow: row;\n      justify-content: center;\n      height: 100%;\n      clear: both;\n      --tab-indicator-offset: 0;\n    }\n    .stack-layout .tabs {\n      flex-flow: column;\n    }\n    .stack-layout .tab {\n      height: auto;\n      background: transparent;\n    }\n    .stack-layout .tab:first-of-type:after {\n      display: none;\n    }\n    .stack-layout .tab:first-child, .stack-layout .tab:last-child {\n      border: none;\n      border-radius: 0;\n      padding-left: 8px;\n      padding-right: 8px;\n      padding-bottom: .5em;\n      margin-left: -8px;\n      margin-right: -8px;\n      margin-bottom: .5em;\n      margin-top: -8px;\n    }\n    .stack-layout .tab:first-child {\n      border-top-left-radius: 36px;\n      border-top-right-radius: 36px\n    }\n    .stack-layout .content {\n      visibility: visible;\n      position: relative;\n      top: auto;\n      left: auto;\n      bottom: auto;\n      padding-left: 1em;\n      background: ${base00};\n      overflow: hidden;\n    }\n    .stack-layout .tab > label {\n      display: block;\n      position: relative;\n      height: auto;\n      text-align: left;\n      padding-left: 1em;\n      padding-top: 1em;\n      padding-bottom: .5em;\n      color: #666;\n    }\n    .stack-layout .tab > input[type=\"radio\"] {\n      visibility: hidden;\n    }\n    .tab {\n      min-width: ${TAB_WIDTH}px;\n      border-color: ${base02};\n      background: ${base01};\n      border-style: solid;\n      border-top-width: 1px;\n      border-bottom-width: 1px;\n      height: ${TAB_HEIGHT}px;\n      border-left: none;\n      border-right: none;\n      box-sizing: content-box;\n    }\n\n    .tab:first-child {\n        border-top-left-radius: ${TAB_HEIGHT}px;\n        border-bottom-left-radius: ${TAB_HEIGHT}px;\n        border-left-width: 1px;\n        border-left-style: solid;\n        border-left-color: ${base02};\n    }\n\n    .tab:last-child {\n      border-top-right-radius: ${TAB_HEIGHT}px;\n      border-bottom-right-radius: ${TAB_HEIGHT}px;\n      border-right-width: 1px;\n      border-right-style: solid;\n      border-right-color: ${base02};\n    }\n    .tab:first-of-type:after {\n      content: '';\n      display: block;\n      position: relative;\n      width: ${TAB_WIDTH - 6}px;\n      margin: 0;\n      top: 3px;\n      height: ${TAB_HEIGHT - 6}px;\n      left: calc(3px + var(--tab-indicator-offset));\n      z-index: 0;\n      border-radius: ${TAB_HEIGHT}px;\n      background: ${base00};\n      transition-property: left;\n      transition-duration: 200ms;\n      transition-timing-function: ease-in-out;\n    }\n    .tab label {\n      position: absolute;\n      width: 150px;\n      height: ${TAB_HEIGHT}px;\n      padding-top: 8px;\n      padding-bottom: 6px;\n      font-weight: 700;\n      letter-spacing: 0.5px;\n      font-size: 14px;\n      text-transform: uppercase;\n      text-align: center;\n      color: ${base05};\n      user-select: none;\n      z-index: 1;\n    }\n    .tab [type=radio] {\n      display: none;   \n    }\n    .content {\n      visibility: hidden;\n      position: absolute;\n      top: ${TAB_HEIGHT + 2}px;\n      left: 0;\n      right: 0;\n      bottom: 0;\n      font-size: 14px;\n    }\n    [type=radio]:hover ~ label {\n      color: #fff;\n    }\n    [type=radio]:checked ~ label {\n      color: #fff;\n      z-index: 2;\n    }\n    [type=radio]:checked ~ label ~ .content {\n      z-index: 1;\n      visibility: visible;\n    }\n    .buttons {\n      display: flex;\n      justify-content: space-between;\n      padding-left: 1em;\n      padding-right: 1em;\n      padding-bottom: .5em;\n    }\n    .button {\n      display: inline-block;\n      margin-bottom: 0.25em;\n      padding: 0.5em 1em;\n      font-size: 14px;\n      min-height: 30px;\n      margin-top: 6px;\n      margin-bottom: 6px;\n      font-weight: 700;\n      text-align: center;\n      text-decoration: none;\n      border-radius: 4px;\n      cursor: pointer;\n      user-select: none;\n      text-transform: uppercase;\n      outline: none;\n      background: ${base01};\n      color: ${base05};\n      border: 1px solid #111;\n    }\n    .stack-layout .button {\n      color: #333;\n      background: transparent;\n      border: 1px solid #ccc;\n    }\n    .button:disabled {\n      opacity: .5;\n    }\n    .button svg {\n      height: 1em;\n      width: 1em;\n      margin-right: .55em;\n      vertical-align: -.12em;\n    }\n    .button:enabled:hover, .button:enabled:active {\n      color: #0066ce;\n      border: 1px solid #0066ce;\n    }\n    .button:enabled:active {\n      color: #fff;\n      background: #0066ce;\n      border: 1px solid #0066ce;\n    }\n    .mathfield {\n      display: block;\n      border: 1px solid #ccc;\n      border-radius: 8px;\n      padding: .5em;\n      font-size: 2rem;\n      background: #fff;\n    }\n    @media (max-width: 777px) { \n      :host > div {\n          flex-flow: column;\n      }\n      .source, .result {\n          width: calc(100% - 1em);\n          margin-left: .5em;\n          margin-right: .5em;\n          margin-top: .5em;\n          margin-bottom: .5em;\n      }\n    }\n\n\n    /* Tomorrow Comment */\n    .hljs-comment,\n    .hljs-title {\n        color: ${base04};\n        font-style: italic;\n    }\n    \n    /* Tomorrow Red */\n    .hljs-variable,\n    .hljs-attribute,\n    .hljs-tag,\n    .hljs-regexp,\n    .ruby .hljs-constant,\n    .xml .hljs-tag .hljs-title,\n    .xml .hljs-pi,\n    .xml .hljs-doctype,\n    .html .hljs-doctype,\n    .css .hljs-id,\n    .css .hljs-class,\n    .css .hljs-pseudo {\n        color: ${base0c};\n    }\n    \n    /* Tomorrow Orange */\n    .hljs-number,\n    .hljs-preprocessor,\n    .hljs-built_in,\n    .hljs-literal,\n    .hljs-params,\n    .hljs-constant {\n        color: ${base09};\n        font-weight: normal;\n    }\n    \n    /* Tomorrow Yellow */\n    .ruby .hljs-class .hljs-title,\n    .css .hljs-rules .hljs-attribute {\n        color: ${base0a};\n    }\n    \n    /* Tomorrow Green */\n    .hljs-string,\n    .hljs-value,\n    .hljs-inheritance,\n    .hljs-header,\n    .ruby .hljs-symbol,\n    .xml .hljs-cdata {\n        color: ${base0b};\n    }\n    \n    /* Tomorrow Aqua */\n    .css .hljs-hexcolor {\n        color: ${base08};\n    }\n    \n    /* Tomorrow Blue */\n    .hljs-function,\n    .python .hljs-decorator,\n    .python .hljs-title,\n    .ruby .hljs-function .hljs-title,\n    .ruby .hljs-title .hljs-keyword,\n    .perl .hljs-sub,\n    .javascript .hljs-title,\n    .coffeescript .hljs-title {\n        color: ${base0d};\n        font-weight: bold;\n    }\n    \n    /* Tomorrow Purple */\n    .hljs-keyword,\n    .javascript .hljs-function {\n        color: ${base0e};\n        font-weight: bold;\n    }\n    \n    .hljs {\n        display: block;\n        background: ${base00};\n        color: ${base05};\n        padding: 0.5em;\n    }\n    \n    .coffeescript .javascript,\n    .javascript .xml,\n    .tex .hljs-formula,\n    .xml .javascript,\n    .xml .vbscript,\n    .xml .css,\n    .xml .hljs-cdata {\n        opacity: 0.5;\n    }\n    \n    // Rouge typographic adjustments.\n    // See https://github.com/rouge-ruby/rouge/wiki/List-of-tokens\n    \n    .highlight .c1,     // Single line comment\n    .highlight .cm      // Multiline comment\n     {\n        font-style: italic;\n    }\n    \n    .highlight .k,       // keywords\n    .highlight .kc,       // keywords constant\n    .highlight .kd,       // keywords declaration\n    .highlight .kn,       // keywords namespace\n    .highlight .kp,       // keywords pseudi\n    .highlight .kr,       // keywords reserved\n    .highlight .kt,       // keywords type\n    .highlight .kv       // keywords variable\n     {\n        font-weight: bold;\n    }\n    \n    .CodeMirror {\n      font-family: 'JetBrains Mono', 'IBM Plex Mono', 'Fira Code', 'Source Code Pro',  monospace;\n    }\n    .cm-s-tomorrow-night.CodeMirror { background: ${base00}; color: ${base05}; }\n    .cm-s-tomorrow-night div.CodeMirror-selected { background: ${base01}; }\n    .cm-s-tomorrow-night .CodeMirror-line::selection, .cm-s-tomorrow-night .CodeMirror-line > span::selection, .cm-s-tomorrow-night .CodeMirror-line > span > span::selection { background: rgba(45, 45, 45, 0.99); }\n    .cm-s-tomorrow-night .CodeMirror-line::-moz-selection, .cm-s-tomorrow-night .CodeMirror-line > span::-moz-selection, .cm-s-tomorrow-night .CodeMirror-line > span > span::-moz-selection { background: rgba(45, 45, 45, 0.99); }\n    .cm-s-tomorrow-night .CodeMirror-gutters { background: ${base00}; border-right: 0px; }\n    .cm-s-tomorrow-night .CodeMirror-guttermarker { color: ${base0c}; }\n    .cm-s-tomorrow-night .CodeMirror-guttermarker-subtle { color: ${base03}; }\n    .cm-s-tomorrow-night .CodeMirror-linenumber { color: ${base04}; opacity: .4; }\n    .cm-s-tomorrow-night .CodeMirror-cursor { border-left: 1px solid ${base0d}; }\n    \n    .cm-s-tomorrow-night span.cm-comment { color: ${base09}; }\n    .cm-s-tomorrow-night span.cm-atom { color: ${base0e}; }\n    .cm-s-tomorrow-night span.cm-number { color: ${base0e}; }\n    \n    .cm-s-tomorrow-night span.cm-property, .cm-s-tomorrow-night span.cm-attribute { color: ${base0b}; }\n    .cm-s-tomorrow-night span.cm-keyword { color: ${base0c}; }\n    .cm-s-tomorrow-night span.cm-string { color: ${base0a}; }\n    \n    .cm-s-tomorrow-night span.cm-variable { color: ${base0b}; }\n    .cm-s-tomorrow-night span.cm-variable-2 { color: ${base0d}; }\n    .cm-s-tomorrow-night span.cm-def { color: ${base09}; }\n    .cm-s-tomorrow-night span.cm-bracket { color: ${base05}; }\n    .cm-s-tomorrow-night span.cm-tag { color: ${base0c}; }\n    .cm-s-tomorrow-night span.cm-link { color: ${base0e}; }\n    .cm-s-tomorrow-night span.cm-error { background: ${base0c}; color: ${base03}; }\n    \n    .cm-s-tomorrow-night .CodeMirror-activeline-background { background: ${base02}; }\n    .cm-s-tomorrow-night .CodeMirror-matchingbracket { text-decoration: underline; color: white !important; }    \n\n  </style>\n  <slot name=\"style\"></slot>\n`;\n\nconst CONSOLE_MAX_LINES = 1000;\n\ndeclare class ResizeObserver {\n    constructor(callback: ResizeObserverCallback);\n    observe: (target: Element, options?: ResizeObserverOptions) => void;\n    unobserve: (target: Element) => void;\n    disconnect: () => void;\n}\n\ntype ResizeObserverBoxOptions =\n    | 'border-box'\n    | 'content-box'\n    | 'device-pixel-content-box';\n\ninterface ResizeObserverOptions {\n    box?: ResizeObserverBoxOptions;\n}\n\ntype ResizeObserverCallback = (\n    entries: ResizeObserverEntry[],\n    observer: ResizeObserver\n) => void;\n\ninterface ResizeObserverEntry {\n    readonly target: Element;\n    readonly contentRect: DOMRectReadOnly;\n    readonly borderBoxSize: ResizeObserverSize[];\n    readonly contentBoxSize: ResizeObserverSize[];\n    readonly devicePixelContentBoxSize: ResizeObserverSize[];\n}\n\ninterface ResizeObserverSize {\n    readonly inlineSize: number;\n    readonly blockSize: number;\n}\n\n// interface Window {\n//   ResizeObserver: typeof ResizeObserver;\n// }\n\nexport class CodePlaygroundElement extends HTMLElement {\n    dirty = false;\n    containerId: string;\n    moduleMap: { [module: string]: string };\n    resizeObserver: ResizeObserver;\n\n    static get observedAttributes(): string[] {\n        return ['activetab', 'layout', 'showlinenumbers'];\n    }\n\n    attributeChangedCallback(\n        name: string,\n        oldValue: string,\n        newValue: string\n    ): void {\n        if (name === 'activetab' && oldValue !== newValue) {\n            this.activateTab(newValue);\n        } else if (name === 'layout' && oldValue !== newValue) {\n            this.shadowRoot\n                .querySelector<HTMLElement>(':host > div')\n                .classList.toggle('tab-layout', newValue !== 'stack');\n            this.shadowRoot\n                .querySelector<HTMLElement>(':host > div')\n                .classList.toggle('stack-layout', newValue === 'stack');\n        } else if (name === 'showlinenumbers' && oldValue !== newValue) {\n            this.shadowRoot\n                .querySelectorAll('textarea + .CodeMirror')\n                .forEach((x) =>\n                    x?.['CodeMirror']?.setLineNumbers(this.showLineNumbers)\n                );\n        }\n    }\n    constructor() {\n        super();\n        if (!this.id) {\n            this.id = randomId();\n        }\n        this.moduleMap = window['moduleMap'] ?? {};\n        this.attachShadow({ mode: 'open' });\n        this.shadowRoot.appendChild(TEMPLATE.content.cloneNode(true));\n        const container = document.createElement('div');\n        this.containerId = randomId();\n        container.id = this.containerId;\n        const containerContent = `\n      <div class='original-content'><slot name=\"html\"></slot><slot name=\"css\"></slot><slot name=\"javascript\"></slot></div>\n      <div class='source'><div class='tabs'></div>\n      <div class='buttons'>\n        <button id='reset-button' class='button' disabled><svg aria-hidden=\"true\" focusable=\"false\" data-prefix=\"far\" data-icon=\"history\" class=\"svg-inline--fa fa-history fa-w-16\" role=\"img\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\"><path fill=\"currentColor\" d=\"M504 255.532c.252 136.64-111.182 248.372-247.822 248.468-64.014.045-122.373-24.163-166.394-63.942-5.097-4.606-5.3-12.543-.443-17.4l16.96-16.96c4.529-4.529 11.776-4.659 16.555-.395C158.208 436.843 204.848 456 256 456c110.549 0 200-89.468 200-200 0-110.549-89.468-200-200-200-55.52 0-105.708 22.574-141.923 59.043l49.091 48.413c7.641 7.535 2.305 20.544-8.426 20.544H26.412c-6.627 0-12-5.373-12-12V45.443c0-10.651 12.843-16.023 20.426-8.544l45.097 44.474C124.866 36.067 187.15 8 256 8c136.811 0 247.747 110.781 248 247.532zm-167.058 90.173l14.116-19.409c3.898-5.36 2.713-12.865-2.647-16.763L280 259.778V116c0-6.627-5.373-12-12-12h-24c-6.627 0-12 5.373-12 12v168.222l88.179 64.13c5.36 3.897 12.865 2.712 16.763-2.647z\"></path></svg>Reset</button>\n        <button id='run-button' class='button'><svg aria-hidden=\"true\" focusable=\"false\" data-prefix=\"far\" data-icon=\"play\" class=\"svg-inline--fa fa-play fa-w-14\" role=\"img\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 448 512\"><path fill=\"currentColor\" d=\"M424.4 214.7L72.4 6.6C43.8-10.3 0 6.1 0 47.9V464c0 37.5 40.7 60.1 72.4 41.3l352-208c31.4-18.5 31.5-64.1 0-82.6zM48 453.5v-395c0-4.6 5.1-7.5 9.1-5.2l334.2 197.5c3.9 2.3 3.9 8 0 10.3L57.1 458.7c-4 2.3-9.1-.6-9.1-5.2z\"></path></svg>Run</button>\n      </div></div>\n      <div class='result'>\n          <div class='output'></div>\n      </div></div>`;\n\n        container.innerHTML = containerContent;\n        this.shadowRoot.appendChild(container);\n\n        // Add event handler for \"run\" and \"reset\" button\n        this.shadowRoot\n            .getElementById('run-button')\n            .addEventListener('click', (_ev) => {\n                this.runPlayground();\n            });\n        this.shadowRoot\n            .getElementById('reset-button')\n            .addEventListener('click', (_ev) => {\n                this.resetPlayground();\n            });\n\n        // Track insertion/changes to slots\n        this.shadowRoot\n            .querySelector('.original-content')\n            .addEventListener('slotchange', (_ev) => {\n                this.dirty = true;\n                requestAnimationFrame(() => this.update());\n            });\n\n        this.resizeObserver = new ResizeObserver(() => {\n            requestAnimationFrame(() => {\n                this.shadowRoot\n                    .querySelectorAll('textarea + .CodeMirror')\n                    .forEach((x) => x?.['CodeMirror']?.refresh());\n            });\n        });\n    }\n\n    connectedCallback(): void {\n        const styleSlot = this.shadowRoot.querySelector<HTMLSlotElement>(\n            'slot[name=style]'\n        );\n        if (styleSlot) {\n            const styleContent = styleSlot\n                .assignedNodes()\n                .map((node: HTMLElement) => node.innerHTML)\n                .join('');\n            const style = document.createElement('style');\n            style.textContent = styleContent;\n            this.shadowRoot.appendChild(style);\n        }\n    }\n\n    // The content of the code section has changed. Rebuild the tabs\n    update(): void {\n        if (!this.dirty) return;\n        this.dirty = false;\n\n        const shadowRoot = this.shadowRoot;\n        // eslint-disable-next-line @typescript-eslint/no-this-alias\n        const self = this;\n\n        const activateTab = function (ev: Event) {\n            const tab = ev.target as HTMLElement;\n            if (tab.tagName === 'LABEL') {\n                self.activateTab((tab.parentNode as HTMLElement).dataset.name);\n            }\n        };\n\n        // 1. Remove the event handlers\n        shadowRoot.querySelectorAll('.tab').forEach((x) => {\n            x.removeEventListener('click', activateTab);\n        });\n\n        // 2. Collect the content of each tab\n        const slots = shadowRoot.querySelectorAll('.original-content slot');\n        let content = '';\n        slots.forEach((slot: HTMLSlotElement) => {\n            let text = slot\n                .assignedNodes()\n                .map((node: HTMLElement) => node.innerHTML)\n                .join('');\n            if (text) {\n                // Remove empty comments. This 'trick' is used to work around\n                // an issue where Eleventy ignores empty lines in HTML blocks,\n                // so an empty comment is insert, but it now needs to be removed\n                // so that the empty line is properly picked up by CodeMirror. Sigh.\n                text = text.replace(/<!-- -->/g, '');\n                const tabId = randomId();\n                const language = slot.name;\n                content += `<div class='tab' id=\"${tabId}\" data-name=\"${language}\">\n        <input type=\"radio\" id=\"${tabId}\" name=\"${this.id}\">\n        <label for=\"${tabId}\">${language}</label>\n        <div class=\"content ${language.toLowerCase()}\">\n            <textarea data-language=\"${language.toLowerCase()}\">${text}</textarea> \n        </div>\n    </div>`;\n            }\n        });\n        shadowRoot.querySelector('.tabs').innerHTML = content;\n\n        // 3. Listen to tab activation\n        const tabs = shadowRoot.querySelectorAll<HTMLElement>('.tab');\n        if (tabs.length <= 1) {\n            tabs.forEach(\n                (x) =>\n                    (x.querySelector<HTMLElement>(\n                        '.tab > label'\n                    ).style.display = 'none')\n            );\n            const visibleTab = shadowRoot.querySelector<HTMLElement>(\n                '.tab .content'\n            );\n            visibleTab.style.marginTop = '8px';\n            visibleTab.style.borderTopLeftRadius = '8px';\n            visibleTab.style.borderTopRightRadius = '8px';\n        } else {\n            shadowRoot.querySelectorAll('.tab label').forEach((x) => {\n                x.addEventListener('click', activateTab);\n            });\n        }\n\n        // 4. Setup editors\n        if (typeof CodeMirror !== 'undefined') {\n            this.resizeObserver.disconnect();\n            shadowRoot\n                .querySelectorAll<HTMLTextAreaElement>('.tab .content textarea')\n                .forEach((x: HTMLTextAreaElement) => {\n                    // Remove XML comments, including the <!-- htmlmin:ignore --> used to\n                    // indicate to terser to skip sections, so as to preserve the formatting.\n                    x.value = x.value.replace(/<!--.*-->\\n?/g, '');\n\n                    // Watch for re-layout and invoke CodeMirror refresh when they happen\n                    this.resizeObserver.observe(x.parentElement);\n\n                    const lang = {\n                        javascript: 'javascript',\n                        css: 'css',\n                        html: 'xml',\n                    }[x.dataset.language ?? 'javascript'];\n\n                    const editor = CodeMirror.fromTextArea(x, {\n                        lineNumbers: this.showLineNumbers,\n                        lineWrapping: true,\n                        mode: lang,\n                        theme: 'tomorrow-night',\n                    });\n                    editor.setSize('100%', '100%');\n                    editor.on('change', () => {\n                        this.editorContentChanged();\n                    });\n                });\n        }\n\n        // 5. Activate the previously active tab, or the first one\n        this.activateTab(this.activeTab || tabs[0].dataset.name);\n\n        // 6. Run the playground\n        this.runPlayground();\n\n        // Refresh the codemirror layouts\n        // (important to get the linenumbers to display correctly)\n        setTimeout(\n            () =>\n                shadowRoot\n                    .querySelectorAll('textarea + .CodeMirror')\n                    .forEach((x) => x?.['CodeMirror']?.refresh()),\n            128\n        );\n    }\n\n    activateTab(name: string): void {\n        const activeTab: HTMLElement =\n            this.shadowRoot.querySelector<HTMLElement>(`[data-name=${name}]`) ??\n            this.shadowRoot.querySelectorAll<HTMLElement>('.tab')[0];\n\n        if (!activeTab) return;\n\n        activeTab.querySelector<HTMLInputElement>(\n            'input[type=\"radio\"]'\n        ).checked = true;\n\n        this.shadowRoot\n            .querySelector<HTMLElement>('.tabs')\n            .style.setProperty(\n                '--tab-indicator-offset',\n                activeTab.offsetLeft -\n                    this.shadowRoot.querySelector<HTMLElement>(\n                        '.tab:first-of-type'\n                    ).offsetLeft +\n                    'px'\n            );\n        requestAnimationFrame(() =>\n            activeTab\n                .querySelector('textarea + .CodeMirror')\n                ?.['CodeMirror']?.refresh()\n        );\n    }\n\n    runPlayground(): void {\n        const section = this.shadowRoot;\n        const result = section.querySelector('.result');\n\n        // Remove all the script tags that might be there.\n        result.querySelectorAll('.result > script').forEach((x) => {\n            result.removeChild(x);\n        });\n\n        // Remove all the consoles that might be there.\n        result.querySelectorAll('.result > .console').forEach((x) => {\n            result.removeChild(x);\n        });\n\n        // Setup the HTML in 'output'\n        let htmlContent = '';\n        const htmlEditor = section.querySelector(\n            'textarea[data-language=\"html\"] + .CodeMirror'\n        );\n        if (htmlEditor) {\n            htmlContent = htmlEditor['CodeMirror'].getValue();\n        } else {\n            htmlContent =\n                section.querySelector<HTMLTextAreaElement>(\n                    'textarea[data-language=\"html\"]'\n                )?.value ?? '';\n        }\n        try {\n            section.querySelector('.output').innerHTML = htmlContent;\n        } catch (e) {\n            // If there's a syntax error in the markup, catch it here\n            this.pseudoConsole().error(e.message);\n        }\n        // If the HTML content contains any <script> tags, extract them\n        const scriptTags = htmlContent.match(/<script.*>.*<\\/script>/g);\n        scriptTags?.forEach((x) => {\n            const m = x.match(/<script([^>]*?)>(.*)<\\/script>/);\n            const regex = new RegExp(\n                '[\\\\s\\\\r\\\\t\\\\n]*([a-z0-9\\\\-_]+)[\\\\s\\\\r\\\\t\\\\n]*=[\\\\s\\\\r\\\\t\\\\n]*([\\'\"])((?:\\\\\\\\\\\\2|(?!\\\\2).)*)\\\\2',\n                'ig'\n            );\n            const attributes = {};\n            let match;\n            while ((match = regex.exec(m[1]))) {\n                attributes[match[1]] = match[3];\n            }\n            const newScript = document.createElement('script');\n            Object.keys(attributes).forEach(\n                (x) => (newScript[x] = attributes[x])\n            );\n            try {\n                newScript.textContent = this.processLiveCodeJavascript(m[2]);\n                result.appendChild(newScript);\n            } catch (err) {\n                // If there's a syntax error in the script, catch it here\n                this.pseudoConsole().error(err.message);\n            }\n        });\n\n        // Add a new script tag\n        const jsEditor = section.querySelector(\n            'textarea[data-language=\"javascript\"] + .CodeMirror'\n        );\n        let jsContent = '';\n        if (jsEditor) {\n            jsContent = jsEditor['CodeMirror'].getValue();\n        } else {\n            jsContent =\n                section.querySelector<HTMLTextAreaElement>(\n                    'textarea[data-language=\"javascript\"]'\n                )?.value ?? '';\n        }\n        const newScript = document.createElement('script');\n        newScript.type = 'module';\n        try {\n            newScript.textContent = this.processLiveCodeJavascript(jsContent);\n            result.appendChild(newScript);\n        } catch (err) {\n            // If there's a syntax error in the script, catch it here\n            this.pseudoConsole().error(err.message);\n        }\n        // Temporarily set the window error handler to catch and report\n        // on syntax errors that may be present in the script\n        const previousErrorHandler = window.onerror;\n        window.onerror = (msg, url, line, _colno, error) => {\n            if (url === window.location.href) {\n                if (line === 0) {\n                    if (typeof error?.toString === 'function') {\n                        this.pseudoConsole().error(msg + error.toString());\n                    } else {\n                        this.pseudoConsole().error(msg);\n                    }\n                } else {\n                    this.pseudoConsole().error('Line ' + line + ': ' + msg);\n                }\n            }\n        };\n        setTimeout(() => {\n            window.onerror = previousErrorHandler;\n        }, 500);\n    }\n\n    editorContentChanged(): void {\n        this.shadowRoot.querySelector<HTMLButtonElement>(\n            '#reset-button'\n        ).disabled = false;\n    }\n\n    resetPlayground(): void {\n        const slots = this.shadowRoot.querySelectorAll(\n            '.original-content slot'\n        );\n        slots.forEach((slot: HTMLSlotElement) => {\n            const text = slot\n                .assignedNodes()\n                .map((node: HTMLElement) => node.innerText)\n                .join('');\n            if (text) {\n                const editor = this.shadowRoot.querySelector(\n                    'textarea[data-language=\"' + slot.name + '\"] + .CodeMirror'\n                );\n                editor['CodeMirror'].setValue(text);\n            }\n        });\n    }\n\n    pseudoConsole(): Console & {\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        catch: (err: any) => void;\n    } {\n        const shadowRoot = this.shadowRoot;\n        // root ?? (document.currentScript.getRootNode() as HTMLElement);\n        let console: HTMLElement = shadowRoot.querySelector('.result .console');\n        if (!console) {\n            console = document.createElement('pre');\n            console.classList.add('console');\n            shadowRoot.querySelector('.result').appendChild(console);\n        }\n        const appendConsole = function (msg: string) {\n            // @todo: support string substition (i.e. %s, %c, etc..)\n\n            let lines = console.innerHTML.split('\\n');\n            if (lines.length > CONSOLE_MAX_LINES) {\n                lines = lines.slice(lines.length - CONSOLE_MAX_LINES + 1);\n            }\n            console.innerHTML =\n                lines.join('\\n') +\n                '&nbsp;&nbsp;'.repeat(\n                    parseInt(console.dataset['group-level']) ?? 0\n                ) +\n                msg +\n                '\\n';\n            console.scrollTop = console.scrollHeight;\n        };\n        return {\n            ...window.console,\n            assert: function (condition: boolean, ...args) {\n                if (!condition) appendConsole(interpolate(args));\n            },\n            // non-standard\n            catch: function (err) {\n                const m =\n                    err.stack\n                        .split('at ')\n                        .pop()\n                        .match(/:([0-9]+):([0-9]+)$/) || [];\n                appendConsole(\n                    '<span class=\"error\">' +\n                        (m[1] ? 'Line ' + m[1] + ': ' : '') +\n                        err.message +\n                        '</span>'\n                );\n            },\n            clear: function () {\n                console.innerHTML = '';\n            },\n            debug: function (...args) {\n                appendConsole(interpolate(args));\n            },\n            dir: function (...args) {\n                appendConsole(interpolate(args));\n            },\n            error: function (...args) {\n                appendConsole(\n                    '<span class=\"error\">' + interpolate(args) + '</span>'\n                );\n            },\n            group: function (...args) {\n                if (arguments.length > 0)\n                    appendConsole(\n                        '<span class=\"group\">' + interpolate(args) + '</span>'\n                    );\n                console.dataset['group-level'] = Number(\n                    (parseInt(console.dataset['group-level']) ?? 0) + 1\n                ).toString();\n            },\n            groupCollapsed: function (...args) {\n                if (arguments.length > 0)\n                    appendConsole(\n                        '<span class=\"group\">' + interpolate(args) + '</span>'\n                    );\n                console.dataset['group-level'] = Number(\n                    (parseInt(console.dataset['group-level']) ?? 0) + 1\n                ).toString();\n            },\n            groupEnd: function () {\n                console.dataset['group-level'] = Number(\n                    (parseInt(console.dataset['group-level']) ?? 0) - 1\n                ).toString();\n            },\n            info: function (...args) {\n                appendConsole(interpolate(args));\n            },\n            log: function (...args) {\n                appendConsole(interpolate(args));\n            },\n            warn: function (...args) {\n                appendConsole(\n                    '<span class=\"warning\">' + interpolate(args) + '</span>'\n                );\n            },\n        };\n    }\n\n    /**\n     * Process a script fragment to be able to run inside the playground\n     * - replace querySelector/querySelectoAll calls\n     * - replace `console.*` calls\n     * - extract imports\n     * - wrap in a try/catch block\n     */\n    processLiveCodeJavascript(script: string): string {\n        if (!script) return '';\n        const jsID = randomJavaScriptId();\n        // Replace document.querySelector.* et al with section.querySelector.*\n        script = script.replace(\n            /([^a-zA-Z0-9_-]?)document\\s*\\.\\s*querySelector\\s*\\(/g,\n            '$1container' + jsID + '.querySelector('\n        );\n        script = script.replace(\n            /([^a-zA-Z0-9_-]?)document\\s*\\.\\s*querySelectorAll\\s*\\(/g,\n            '$1container' + jsID + '.querySelectorAll('\n        );\n\n        script = script.replace(\n            /([^a-zA-Z0-9_-]?)document\\s*\\.\\s*getElementById\\s*\\(/g,\n            '$1container' + jsID + \".querySelector('#' + \"\n        );\n\n        // Replace console.* with pseudoConsole.*\n        script = script.replace(\n            /([^a-zA-Z0-9_-])?console\\s*\\.\\s*/g,\n            '$1shadowRoot' + jsID + '.host.pseudoConsole().'\n        );\n\n        // Extract import (can't be inside a try...catch block)\n        const imports = [];\n        script = script.replace(\n            /([^a-zA-Z0-9_-]?import.*)('.*'|\".*\");/g,\n            (match, p1, p2) => {\n                imports.push([match, p1, p2.slice(1, p2.length - 1)]);\n                return '';\n            }\n        );\n\n        // Important: keep the ${script} on a separate line. The content could\n        // be \"// a comment\" which would result in the script failign to parse\n        return (\n            imports\n                .map((x) => {\n                    if (this.moduleMap[x[2]]) {\n                        return x[1] + '\"' + this.moduleMap[x[2]] + '\";';\n                    }\n                    return x[0];\n                })\n                .join('\\n') +\n            `const shadowRoot${jsID} = document.querySelector(\"#${this.id}\").shadowRoot;` +\n            `const container${jsID} = shadowRoot${jsID}.querySelector(\"#${this.containerId} div.output\");` +\n            'try{\\n' +\n            script +\n            `\\n} catch(err) { shadowRoot${jsID}.host.pseudoConsole().catch(err) }`\n        );\n    }\n\n    //\n    // Property/attributes\n    //\n\n    // 'activetab' is the name of the currently visible tab\n    get activeTab(): string {\n        return this.hasAttribute('activetab')\n            ? this.getAttribute('activetab')\n            : '';\n    }\n\n    set activeTab(val: string) {\n        if (val) {\n            this.setAttribute('activetab', val);\n        } else {\n            this.removeAttribute('activetab');\n        }\n    }\n\n    // 'showlinenumbers' is true if line numbers should be displayed\n    get showLineNumbers(): boolean {\n        return this.hasAttribute('showlinenumbers')\n            ? this.getAttribute('showlinenumbers') === 'true'\n            : true;\n    }\n\n    set showLineNumbers(val: boolean) {\n        if (val) {\n            this.setAttribute('showlinenumbers', val ? 'true' : 'false');\n        } else {\n            this.removeAttribute('showlinenumbers');\n        }\n    }\n}\n\nfunction randomId() {\n    return (\n        'i' +\n        (Date.now().toString(36).slice(-2) +\n            Math.floor(Math.random() * 0x186a0).toString(36))\n    );\n}\n\nfunction randomJavaScriptId() {\n    return (\n        Date.now().toString(26).slice(-2) +\n        Math.floor(Math.random() * 0x186a0).toString(26)\n    );\n}\n\nconst INDENT = '  ';\n\n/**\n * Convert a basic type or an object into a HTML string\n */\nfunction asString(\n    depth: number,\n    value: unknown,\n    options: { quote?: string } = {}\n): { text: string; itemCount: number; lineCount: number } {\n    options.quote ??= '\"';\n\n    //\n    // BOOLEAN\n    //\n    if (typeof value === 'boolean') {\n        return {\n            text: `<span class=\"boolean\">${escapeHTML(String(value))}</span>`,\n            itemCount: 1,\n            lineCount: 1,\n        };\n    }\n    //\n    // NUMBER\n    //\n    if (typeof value === 'number') {\n        return {\n            text: `<span class=\"number\">${escapeHTML(String(value))}</span>`,\n            itemCount: 1,\n            lineCount: 1,\n        };\n    }\n    //\n    // STRING\n    //\n    if (typeof value === 'string') {\n        if (options.quote.length === 0) {\n            return {\n                text: escapeHTML(value),\n                itemCount: 1,\n                lineCount: value.split(/\\r\\n|\\r|\\n/).length,\n            };\n        }\n        return {\n            text: `<span class=\"string\">${escapeHTML(\n                options.quote + value + options.quote\n            )}</span>`,\n            itemCount: 1,\n            lineCount: value.split(/\\r\\n|\\r|\\n/).length,\n        };\n    }\n    //\n    // FUNCTION\n    //\n    if (typeof value === 'function') {\n        let functionValue = '';\n        if (value.hasOwnProperty('toString')) {\n            functionValue = escapeHTML(value.toString());\n        } else {\n            functionValue = escapeHTML(String(value));\n        }\n        return {\n            text: `<span class=\"function\">ƒ  ${functionValue}</span>`,\n            itemCount: 1,\n            lineCount: functionValue.split(/\\r\\n|\\r|\\n/).length,\n        };\n    }\n\n    //\n    // NULL\n    //\n    if (value === null) {\n        return {\n            text: `<span class=\"null\">${escapeHTML(String(value))}</span>`,\n            itemCount: 1,\n            lineCount: 1,\n        };\n    }\n\n    // Avoid infinite recursions (e.g. `window.window`)\n    if (depth > 20) {\n        return {\n            text: '<span class=\"sep\">(...)</span>',\n            itemCount: 1,\n            lineCount: 1,\n        };\n    }\n\n    //\n    // ARRAY\n    //\n    if (Array.isArray(value)) {\n        const result = [];\n        // To account for sparse array, we can't use map() (it skips over empty slots)\n        for (let i = 0; i < value.length; i++) {\n            if (Object.keys(value).includes(Number(i).toString())) {\n                result.push(asString(depth + 1, value[i]));\n            } else {\n                result.push({\n                    text: '<span class=\"empty\">empty</span>',\n                    itemCount: 1,\n                    lineCount: 1,\n                });\n            }\n        }\n        const itemCount = result.reduce((acc, val) => acc + val.itemCount, 0);\n        const lineCount = result.reduce(\n            (acc, val) => Math.max(acc, val.lineCount),\n            0\n        );\n        if (itemCount > 5 || lineCount > 1) {\n            return {\n                text:\n                    \"<span class='sep'>[</span>\\n\" +\n                    INDENT.repeat(depth + 1) +\n                    result\n                        .map(\n                            (x, i) =>\n                                '<span class=\"index\">' + i + '</span>' + x.text\n                        )\n                        .join(\n                            \"<span class='sep'>, </span>\\n\" +\n                                INDENT.repeat(depth + 1)\n                        ) +\n                    '\\n' +\n                    INDENT.repeat(depth) +\n                    \"<span class='sep'>]</span>\",\n                itemCount,\n                lineCount:\n                    2 + result.reduce((acc, val) => acc + val.lineCount, 0),\n            };\n        }\n        return {\n            text:\n                \"<span class='sep'>[</span>\" +\n                result.map((x) => x.text).join(\"<span class='sep'>, </span>\") +\n                \"<span class='sep'>]</span>\",\n            itemCount: Math.max(1, itemCount),\n            lineCount: 1,\n        };\n    }\n\n    //\n    // HTMLElement\n    //\n    if (value instanceof Element) {\n        let result = `<${value.localName}`;\n        let lineCount = 1;\n        Array.from(value.attributes).forEach((x) => {\n            result +=\n                ' ' +\n                x.localName +\n                '=\"' +\n                value.getAttribute(x.localName) +\n                '\"';\n        });\n        result += '>';\n\n        if (value.innerHTML) {\n            let content = value.innerHTML.split('\\n');\n            if (content.length > 4) {\n                content = [...content.slice(0, 5), '(...)\\n'];\n            }\n            result += content.join('\\n');\n            lineCount += content.length;\n        }\n\n        result += `</${value.localName}>`;\n        return {\n            text: `<span class=\"object\">${escapeHTML(result)}</span>`,\n            itemCount: 1,\n            lineCount: lineCount,\n        };\n    }\n\n    //\n    // OBJECT\n    //\n    if (typeof value === 'object') {\n        const props = Object.keys(value);\n\n        Object.getOwnPropertyNames(value).forEach((prop) => {\n            if (!props.includes(prop)) {\n                props.push(prop);\n            }\n        });\n        if (props.length === 0 && typeof props.toString === 'function') {\n            const result = value.toString();\n            if (result === '[object Object]')\n                return {\n                    text: '<span class=\"sep\">{}</span>',\n                    itemCount: 1,\n                    lineCount: 1,\n                };\n            return {\n                text: result,\n                itemCount: 1,\n                lineCount: result.split(/\\r\\n|\\r|\\n/).length,\n            };\n        }\n\n        const propStrings = props.sort().map((key) => {\n            if (typeof value[key] === 'object' && value[key] !== null) {\n                let result = asString(depth + 1, value[key]);\n                if (result.itemCount > 500) {\n                    result = {\n                        text: \"<span class='sep'>(...)</span>\",\n                        itemCount: 1,\n                        lineCount: 1,\n                    };\n                }\n                return {\n                    text: `<span class=\"property\">${key}</span><span class='sep'>: </span>${result.text}`,\n                    itemCount: result.itemCount,\n                    lineCount: result.lineCount,\n                };\n            }\n            if (typeof value[key] === 'function') {\n                return {\n                    text: `<span class=\"property\">${key}</span></span><span class='sep'>: </span><span class='function'>ƒ (...)</span>`,\n                    itemCount: 1,\n                    lineCount: 1,\n                };\n            }\n            const result = asString(depth + 1, value[key]);\n            return {\n                text: `<span class=\"property\">${key}</span></span><span class='sep'>: </span>${result.text}`,\n                itemCount: result.itemCount,\n                lineCount: result.lineCount,\n            };\n        });\n        const itemCount = propStrings.reduce(\n            (acc, val) => acc + val.itemCount,\n            0\n        );\n        const lineCount = propStrings.reduce(\n            (acc, val) => acc + val.lineCount,\n            0\n        );\n        if (itemCount < 5) {\n            return {\n                text:\n                    \"<span class='sep'>{</span>\" +\n                    propStrings\n                        .map((x) => x.text)\n                        .join(\"</span><span class='sep'>, </span>\") +\n                    \"<span class='sep'>}</span>\",\n                itemCount,\n                lineCount,\n            };\n        }\n        return {\n            text:\n                \"<span class='sep'>{</span>\\n\" +\n                INDENT.repeat(depth + 1) +\n                propStrings\n                    .map((x) => x.text)\n                    .join(\n                        \"</span><span class='sep'>,</span>\\n\" +\n                            INDENT.repeat(depth + 1)\n                    ) +\n                '\\n' +\n                INDENT.repeat(depth) +\n                \"<span class='sep'>}</span>\",\n            itemCount: itemCount,\n            lineCount: lineCount + 2,\n        };\n    }\n    return { text: String(value), itemCount: 1, lineCount: 1 };\n}\n\nfunction interpolate(args: unknown[]): string {\n    const format = args[0];\n    const rest = args.slice(1);\n\n    if (typeof format === 'string' && format.includes('%') && rest.length) {\n        const string = format.replace(\n            /(%[oscdif]|%(\\d*)\\.(\\d*)[dif])/g,\n            (all, key, width = '', dp): string => {\n                if (key === '%o') {\n                    // object\n                    return asString(0, rest.shift()).text;\n                }\n\n                if (key === '%s') {\n                    // string\n                    return rest.shift() as string;\n                }\n\n                if (key === '%c') {\n                    return `</span><span style=\"${rest.shift()}\">`;\n                }\n\n                const value = rest.shift();\n                let res = null;\n\n                if (key.substr(-1) === 'f' && typeof value === 'number') {\n                    if (isNaN(parseInt(dp, 10))) {\n                        res = value;\n                    } else {\n                        res = value.toFixed(dp);\n                    }\n                } else if (typeof value === 'string') {\n                    res = parseInt(value, 10);\n                }\n\n                if (width === '') {\n                    return res;\n                }\n\n                return asString(0, res).text.padStart(width, ' ');\n            }\n        );\n\n        return string;\n    }\n\n    return args.map((x) => asString(0, x, { quote: '' }).text).join(' ');\n}\n\nfunction escapeHTML(s: string): string {\n    return s\n        .replace(/&/g, '&amp;')\n        .replace(/</g, '&lt;')\n        .replace(/>/g, '&gt;')\n        .replace(/\"/g, '&quot;')\n        .replace(/'/g, '&#039;');\n}\n\n// Register the tag for the element, only if it isn't already registered\ncustomElements.get('code-playground') ??\n    customElements.define('code-playground', CodePlaygroundElement);\n"],"names":[],"mappings":"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"}